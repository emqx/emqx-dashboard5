{
  "emqx_connector_schema_lib": {
    "auto_reconnect": {
      "desc": "Deprecated. Enable automatic reconnect to the database.",
      "label": "Deprecated. Auto Reconnect Database"
    },
    "password": {
      "desc": "Password used for authentication with the external database.",
      "label": "Password"
    },
    "pool_size": {
      "desc": "Size of the connection pool towards the bridge target service.",
      "label": "Connection Pool Size"
    },
    "prepare_statement": {
      "desc": "Key-value list of SQL prepared statements.",
      "label": "SQL Prepared Statements List"
    },
    "ssl": {
      "desc": "SSL connection settings.",
      "label": "Enable SSL"
    },
    "username": {
      "desc": "The username in the external database used for authentication or identification purposes.",
      "label": "Username"
    },
    "database": {
      "desc": "Database name.",
      "label": "Database Name"
    },
    "description": {
      "label": "Description"
    }
  },
  "emqx_ee_bridge_http": {
    "url": {
      "label": "URL",
      "desc": "The URL of the HTTP Connector.<br/>Template with variables is allowed in the path, but variables cannot be used in the host or port part.<br/>For example, `http://localhost:9901/${'{'}topic{'}'}` is allowed, but`http://${'{'}host{'}'}:9901/message` or `http://localhost:${'{'}port{'}'}/message`is not allowed."
    },
    "headers": {
      "label": "Headers"
    },
    "enable_pipelining": {
      "label": "HTTP Pipelining"
    },
    "pool_size": {
      "label": "Connection Pool Size"
    },
    "pool_type": {
      "label": "Pool Type"
    },
    "connect_timeout": {
      "label": "Connect Timeout"
    },
    "body": {
      "label": "Body",
      "desc": "For example: ${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'} , ${'{'}username{'}'}, etc. Use fields according to the action requirements of your business and forwards the message as it is if it is empty."
    },
    "method": {
      "label": "Method"
    },
    "path": {
      "label": "URL Path",
      "desc": "The URL path for this Action.<br/>This path will be appended to the Connector's <code>url</code> configuration to form the full URL address.Template with variables is allowed in this option. For example, <code>/room/{'{'}$room_no{'}'}</code>"
    },
    "max_retries": {
      "label": "Max Retries"
    }
  },
  "emqx_ee_bridge_mqtt": {
    "server": {
      "label": "MQTT Broker"
    },
    "proto_ver": {
      "label": "MQTT Version"
    },
    "bridge_mode": {
      "label": "Bridge Mode",
      "desc": "This setting is only for MQTT protocol version older than 5.0, and the remote MQTT broker MUST support this feature. After being enabled, the remote broker will recognize the current connection as a bridge, that loop detection will be more effective and that retained messages will be propagated correctly."
    },
    "clean_start": {
      "label": "Clean start",
      "desc": "Whether to start a clean session when reconnecting a remote broker for ingress bridge."
    },
    "keepalive": {
      "label": "Keep Alive"
    },
    "retry_interval": {
      "label": "Message Retry Interval",
      "desc": "Retry interval for QoS1/QoS2 messages if no ACK is received."
    },
    "clientid_prefix": {
      "label": "ClientID Prefix",
      "desc": "The prefix used when the connector randomly generates a Client ID."
    },
    "max_inflight": {
      "label": "Max Inflight",
      "desc": "The number of Unacked messages that can be simultaneously waited for during message publishing, in order to improve message delivery efficiency and throughput."
    },
    "topic": {
      "label": "Topic",
      "desc": "The local broker will publish messages to the topic to the remote broker, supports using ${field} syntax to use the dynamic topics."
    },
    "source_topic": {
      "label": "Topic",
      "desc": "The local broker will subscribe to topic to receive messages from remote broker. When EMQX is running in a cluster or with an enabled ingress connection pool, it is mandatory to use shared subscriptions to avoid message duplication."
    },
    "qos": {
      "label": "QoS"
    },
    "retain": {
      "label": "Retain"
    },
    "payload": {
      "label": "Payload",
      "desc": "For example: ${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'} , ${'{'}username{'}'}, etc. Use fields according to the action requirements of your business and forwards the message as it is if it is empty.Supports reading data using ${'{'}field{'}'} syntax."
    }
  }
}