{
  "common": {
    "auto_restart_interval": {
      "desc": "The auto restart interval after the resource is disconnected.",
      "label": "Auto Restart Interval"
    },
    "batch_size": {
      "desc": "Maximum batch count. If equal to 1, there's effectively no batching.",
      "label": "Max Batch Size"
    },
    "batch_time": {
      "desc": "Maximum waiting interval when accumulating a batch at a low message rates for more efficient resource usage.",
      "label": "Max Batch Wait Time"
    },
    "enable_queue": {
      "desc": "Enable disk buffer queue (only applicable for egress bridges).\nWhen Enabled, messages will be buffered on disk when the bridge connection is down.\nWhen disabled the messages are buffered in RAM only.",
      "label": "Enable Disk Buffer Queue"
    },
    "health_check_interval": {
      "desc": "Health check interval.",
      "label": "Health Check Interval"
    },
    "inflight_window": {
      "desc": "Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.",
      "label": "Inflight Window"
    },
    "query_mode": {
      "desc": "Query mode. Optional 'sync/async', default 'async'.",
      "label": "Query Mode"
    },
    "request_ttl": {
      "desc": "Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.",
      "label": "Request TTL"
    },
    "start_timeout": {
      "desc": "Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.",
      "label": "Start Timeout"
    },
    "worker_pool_size": {
      "desc": "The number of buffer workers. Only applicable for egress type bridges.\nFor bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.",
      "label": "Buffer Pool Size"
    },
    "max_buffer_bytes": {
      "label": "Max Buffer Queue Size",
      "desc": "Maximum number of bytes to buffer for each buffer worker."
    },
    "password": {
      "desc": "Password used for authentication with the external database.",
      "label": "Password"
    },
    "pool_size": {
      "desc": "Size of the connection pool towards the bridge target service.",
      "label": "Connection Pool Size"
    },
    "prepare_statement": {
      "desc": "Key-value list of SQL prepared statements.",
      "label": "SQL Prepared Statements List"
    },
    "ssl": {
      "desc": "SSL connection settings.",
      "label": "Enable SSL"
    },
    "username": {
      "desc": "The username in the external database used for authentication or identification purposes.",
      "label": "Username"
    },
    "database": {
      "desc": "Database name.",
      "label": "Database Name"
    },
    "description": {
      "label": "Description"
    }
  },
  "http": {
    "url": {
      "label": "URL",
      "desc": "The URL of the HTTP Connector.<br/>Template with variables is allowed in the path, but variables cannot be used in the host or port part.<br/>For example, `http://localhost:9901/${'{'}topic{'}'}` is allowed, but`http://${'{'}host{'}'}:9901/message` or `http://localhost:${'{'}port{'}'}/message`is not allowed."
    },
    "headers": {
      "label": "Headers"
    },
    "enable_pipelining": {
      "label": "HTTP Pipelining"
    },
    "pool_size": {
      "label": "Connection Pool Size"
    },
    "pool_type": {
      "label": "Pool Type"
    },
    "connect_timeout": {
      "label": "Connect Timeout"
    },
    "body": {
      "label": "Body",
      "desc": "For example: ${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'} , ${'{'}username{'}'}, etc. Use fields according to the action requirements of your business and forwards the message as it is if it is empty."
    },
    "method": {
      "label": "Method"
    },
    "path": {
      "label": "URL Path",
      "desc": "The URL path for this Action.<br/>This path will be appended to the Connector's <code>url</code> configuration to form the full URL address.Template with variables is allowed in this option. For example, <code>/room/{'{'}$room_no{'}'}</code>"
    },
    "max_retries": {
      "label": "Max Retries"
    }
  },
  "mqtt": {
    "server": {
      "label": "MQTT Broker"
    },
    "proto_ver": {
      "label": "MQTT Version"
    },
    "bridge_mode": {
      "label": "Bridge Mode",
      "desc": "This setting is only for MQTT protocol version older than 5.0, and the remote MQTT broker MUST support this feature. After being enabled, the remote broker will recognize the current connection as a bridge, that loop detection will be more effective and that retained messages will be propagated correctly."
    },
    "clean_start": {
      "label": "Clean start",
      "desc": "Whether to start a clean session when reconnecting a remote broker for ingress bridge."
    },
    "keepalive": {
      "label": "Keep Alive"
    },
    "retry_interval": {
      "label": "Message Retry Interval",
      "desc": "Retry interval for QoS1/QoS2 messages if no ACK is received."
    },
    "clientid_prefix": {
      "label": "ClientID Prefix",
      "desc": "The prefix used when the connector randomly generates a Client ID."
    },
    "max_inflight": {
      "label": "Max Inflight",
      "desc": "The number of Unacked messages that can be simultaneously waited for during message publishing, in order to improve message delivery efficiency and throughput."
    },
    "topic": {
      "label": "Topic",
      "desc": "Message publishing topic, supports using ${'{'}field{'}'} syntax to extract variables and dynamically concatenate the topic."
    },
    "source_topic": {
      "label": "Topic",
      "desc": "Message subscription topics support the use of + and # wildcards. When EMQX is running in cluster mode or the connector is configured with a connection pool, shared subscriptions must be used to avoid message duplication."
    },
    "qos": {
      "label": "QoS"
    },
    "retain": {
      "label": "Retain"
    },
    "payload": {
      "label": "Payload",
      "desc": "For example: ${'{'}payload{'}'}, ${'{'}clientid{'}'}, ${'{'}topic{'}'} , ${'{'}username{'}'}, etc. Use fields according to the action requirements of your business and forwards the message as it is if it is empty.Supports reading data using ${'{'}field{'}'} syntax."
    }
  }
}