{
    "components": {
        "schemas": {
            "bridge_redis.post_sentinel": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "sentinel",
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "sentinel",
                        "description": "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
                        "label": "哨兵模式",
                        "symbols": [
                            "sentinel"
                        ],
                        "type": "enum"
                    },
                    "sentinel": {
                        "description": "Redis 哨兵模式下的集群名称。",
                        "label": "集群名称",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_sentinel"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.producer_buffer": {
                "properties": {
                    "mode": {
                        "default": "memory",
                        "description": "消息缓存模式。<br/><code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。<br/><code>disc</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。<br/><code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
                        "label": "缓存模式",
                        "symbols": [
                            "memory",
                            "disk",
                            "hybrid"
                        ],
                        "type": "enum"
                    },
                    "per_partition_limit": {
                        "default": "2GB",
                        "description": "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
                        "label": "Kafka 分区缓存上限",
                        "type": "byteSize"
                    },
                    "segment_bytes": {
                        "default": "100MB",
                        "description": "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
                        "label": "缓存文件大小",
                        "type": "byteSize"
                    },
                    "memory_overload_protection": {
                        "default": true,
                        "description": "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
                        "label": "内存过载保护",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.post_api_v1": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "database": {
                        "description": "InfluxDB 数据库。",
                        "label": "数据库",
                        "type": "string"
                    },
                    "username": {
                        "description": "InfluxDB 用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "InfluxDB 密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "influxdb_api_v1"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "sync",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "async_inflight_window": {
                        "default": 100,
                        "description": "异步请求飞行队列窗口大小。",
                        "label": "异步请求飞行队列窗口",
                        "type": "string"
                    },
                    "enable_batch": {
                        "default": true,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用批量模式。",
                        "label": "启用批量模式",
                        "type": "boolean"
                    },
                    "batch_size": {
                        "default": 1,
                        "description": "批量请求大小。如果设为1，则无批处理。",
                        "label": "批量请求大小",
                        "type": "string"
                    },
                    "batch_time": {
                        "default": "20ms",
                        "description": "最大批量请求等待时间。",
                        "label": "批量等待间隔",
                        "type": "duration"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "connector-mqtt.ingress": {
                "properties": {
                    "remote": {
                        "description": "订阅远程 Broker 相关的配置。",
                        "label": "远程配置",
                        "$ref": "#/components/schemas/connector-mqtt.ingress_remote"
                    },
                    "local": {
                        "description": "发送消息到本地 Broker 相关的配置。",
                        "label": "本地配置",
                        "$ref": "#/components/schemas/connector-mqtt.ingress_local"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.get_api_v2": {
                "required": [
                    "name",
                    "type",
                    "token",
                    "org",
                    "bucket",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "bucket": {
                        "description": "InfluxDB bucket 名称。",
                        "label": "Bucket",
                        "type": "string"
                    },
                    "org": {
                        "description": "InfluxDB 组织名称。",
                        "label": "组织",
                        "type": "string"
                    },
                    "token": {
                        "description": "InfluxDB token。",
                        "label": "Token",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "influxdb_api_v2"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    },
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "connector-mqtt.egress_local": {
                "properties": {
                    "topic": {
                        "description": "要转发到远程broker的本地主题",
                        "label": "本地主题",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.put_api_v2": {
                "required": [
                    "token",
                    "org",
                    "bucket",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "bucket": {
                        "description": "InfluxDB bucket 名称。",
                        "label": "Bucket",
                        "type": "string"
                    },
                    "org": {
                        "description": "InfluxDB 组织名称。",
                        "label": "组织",
                        "type": "string"
                    },
                    "token": {
                        "description": "InfluxDB token。",
                        "label": "Token",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.get": {
                "required": [
                    "bootstrap_hosts",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "桥接类型",
                        "label": "桥接类型",
                        "symbols": [
                            "kafka"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用（true）或停用该（false）Kafka 数据桥接。",
                        "label": "启用或停用",
                        "type": "boolean"
                    },
                    "bootstrap_hosts": {
                        "description": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                        "label": "主机列表",
                        "type": "string"
                    },
                    "connect_timeout": {
                        "default": "5s",
                        "description": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "min_metadata_refresh_interval": {
                        "default": "3s",
                        "description": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                        "label": "元数据刷新最小间隔",
                        "type": "duration"
                    },
                    "metadata_request_timeout": {
                        "default": "5s",
                        "description": "刷新元数据时最大等待时长。",
                        "label": "元数据请求超时",
                        "type": "duration"
                    },
                    "authentication": {
                        "default": "none",
                        "description": "认证参数。",
                        "label": "认证",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
                            },
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_username_password"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "producer": {
                        "description": "本地 MQTT 数据源和 Kafka 桥接的配置。",
                        "label": "MQTT 到 Kafka",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.producer_opts"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "socket_opts": {
                        "description": "更多 Socket 参数设置。",
                        "label": "Socket 参数",
                        "$ref": "#/components/schemas/bridge_kafka.socket_opts"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.post_rs": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "replica_set_name",
                    "servers"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "rs",
                        "description": "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
                        "label": "Replica set 模式",
                        "symbols": [
                            "rs"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "r_mode": {
                        "default": "master",
                        "description": "读模式。",
                        "label": "读模式",
                        "symbols": [
                            "master",
                            "slave_ok"
                        ],
                        "type": "enum"
                    },
                    "replica_set_name": {
                        "description": "副本集的名称。",
                        "label": "副本集名称",
                        "type": "string"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_rs"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.put_rs": {
                "required": [
                    "database",
                    "replica_set_name",
                    "servers"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "rs",
                        "description": "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
                        "label": "Replica set 模式",
                        "symbols": [
                            "rs"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "r_mode": {
                        "default": "master",
                        "description": "读模式。",
                        "label": "读模式",
                        "symbols": [
                            "master",
                            "slave_ok"
                        ],
                        "type": "enum"
                    },
                    "replica_set_name": {
                        "description": "副本集的名称。",
                        "label": "副本集名称",
                        "type": "string"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    }
                },
                "type": "object"
            },
            "bridge.metrics": {
                "properties": {
                    "dropped": {
                        "description": "被丢弃的消息个数。",
                        "label": "丢弃",
                        "type": "number"
                    },
                    "dropped.other": {
                        "description": "因为其他原因被丢弃的消息个数。",
                        "label": "其他丢弃",
                        "type": "number"
                    },
                    "dropped.queue_full": {
                        "description": "因为队列已满被丢弃的消息个数。",
                        "label": "队列已满被丢弃",
                        "type": "number"
                    },
                    "dropped.resource_not_found": {
                        "description": "因为资源不存在被丢弃的消息个数。",
                        "label": "资源不存在被丢弃",
                        "type": "number"
                    },
                    "dropped.resource_stopped": {
                        "description": "因为资源已停用被丢弃的消息个数。",
                        "label": "资源停用被丢弃",
                        "type": "number"
                    },
                    "matched": {
                        "description": "Bridge 被匹配到（被请求）的次数。",
                        "label": "匹配次数",
                        "type": "number"
                    },
                    "queuing": {
                        "description": "当前被缓存到磁盘队列的消息个数。",
                        "label": "被缓存",
                        "type": "number"
                    },
                    "retried": {
                        "description": "重试的次数。",
                        "label": "已重试",
                        "type": "number"
                    },
                    "failed": {
                        "description": "发送失败的消息个数。",
                        "label": "发送失败",
                        "type": "number"
                    },
                    "inflight": {
                        "description": "已异步地发送但没有收到 ACK 的消息个数。",
                        "label": "已发送未确认",
                        "type": "number"
                    },
                    "success": {
                        "description": "已经发送成功的消息个数。",
                        "label": "发送成功",
                        "type": "number"
                    },
                    "rate": {
                        "description": "执行操作的速率，次/秒",
                        "label": "速率",
                        "type": "number"
                    },
                    "rate_max": {
                        "description": "执行操作的最大速率，次/秒",
                        "label": "执行操作的最大速率",
                        "type": "number"
                    },
                    "rate_last5m": {
                        "description": "5 分钟平均速率，次/秒",
                        "label": "5 分钟平均速率",
                        "type": "number"
                    },
                    "received": {
                        "description": "从远程系统收到的消息个数。",
                        "label": "已接收",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.post": {
                "required": [
                    "bootstrap_hosts",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "桥接类型",
                        "label": "桥接类型",
                        "symbols": [
                            "kafka"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用（true）或停用该（false）Kafka 数据桥接。",
                        "label": "启用或停用",
                        "type": "boolean"
                    },
                    "bootstrap_hosts": {
                        "description": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                        "label": "主机列表",
                        "type": "string"
                    },
                    "connect_timeout": {
                        "default": "5s",
                        "description": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "min_metadata_refresh_interval": {
                        "default": "3s",
                        "description": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                        "label": "元数据刷新最小间隔",
                        "type": "duration"
                    },
                    "metadata_request_timeout": {
                        "default": "5s",
                        "description": "刷新元数据时最大等待时长。",
                        "label": "元数据请求超时",
                        "type": "duration"
                    },
                    "authentication": {
                        "default": "none",
                        "description": "认证参数。",
                        "label": "认证",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
                            },
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_username_password"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "producer": {
                        "description": "本地 MQTT 数据源和 Kafka 桥接的配置。",
                        "label": "MQTT 到 Kafka",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.producer_opts"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "socket_opts": {
                        "description": "更多 Socket 参数设置。",
                        "label": "Socket 参数",
                        "$ref": "#/components/schemas/bridge_kafka.socket_opts"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.get_api_v1": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "database": {
                        "description": "InfluxDB 数据库。",
                        "label": "数据库",
                        "type": "string"
                    },
                    "username": {
                        "description": "InfluxDB 用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "InfluxDB 密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "influxdb_api_v1"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    },
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "bridge_mysql.put": {
                "required": [
                    "database",
                    "server"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mysql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "default": "root",
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "connector-http.request": {
                "properties": {
                    "method": {
                        "description": "HTTP 请求方法。",
                        "label": "HTTP 请求方法",
                        "type": "string"
                    },
                    "path": {
                        "description": "HTTP请求路径。",
                        "label": "HTTP请求路径",
                        "type": "string"
                    },
                    "body": {
                        "description": "HTTP请求报文主体。",
                        "label": "HTTP请求报文主体",
                        "type": "string"
                    },
                    "headers": {
                        "description": "HTTP 头字段列表。",
                        "label": "HTTP 头字段列表",
                        "type": "object"
                    },
                    "max_retries": {
                        "description": "请求出错时的最大重试次数。",
                        "label": "最大重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "description": "HTTP 请求超时。",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.post_sharded": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "servers"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "sharded",
                        "description": "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
                        "label": "Sharded cluster 模式",
                        "symbols": [
                            "sharded"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_sharded"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge.node_status": {
                "properties": {
                    "node": {
                        "description": "节点的名字",
                        "example": "emqx@127.0.0.1",
                        "label": "节点名字",
                        "type": "string"
                    },
                    "status": {
                        "description": "status Description",
                        "label": "status",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    }
                },
                "type": "object"
            },
            "bridge_hstreamdb.post": {
                "required": [
                    "connector",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "hstreamdb"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "direction": {
                        "default": "egress",
                        "description": "桥接的方向， 必须是 egress",
                        "label": "桥接方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "payload": {
                        "default": "${payload}",
                        "description": "要转发到 HStreamDB 的数据内容，支持占位符",
                        "label": "消息内容",
                        "type": "string"
                    },
                    "connector": {
                        "description": "连接器的通用配置。",
                        "example": "hstreamdb:demo",
                        "label": "连接器通用配置。",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/connector_hstreamdb.config"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "connector-mqtt.egress_remote": {
                "required": [
                    "topic"
                ],
                "properties": {
                    "topic": {
                        "description": "<br/>转发到远程broker的哪个topic。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "远程主题",
                        "type": "string"
                    },
                    "qos": {
                        "default": 1,
                        "description": "<br/>待发送 MQTT 消息的 QoS。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "远程 QoS",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "symbols": [
                                    0,
                                    1,
                                    2
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "retain": {
                        "default": false,
                        "description": "<br/>要发送的 MQTT 消息的“保留”标志。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "保留消息标志",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "payload": {
                        "description": "<br/>要发送的 MQTT 消息的负载。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "消息负载",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_redis.get_sentinel": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "sentinel",
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "sentinel",
                        "description": "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
                        "label": "哨兵模式",
                        "symbols": [
                            "sentinel"
                        ],
                        "type": "enum"
                    },
                    "sentinel": {
                        "description": "Redis 哨兵模式下的集群名称。",
                        "label": "集群名称",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_sentinel"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "bridge.node_metrics": {
                "properties": {
                    "node": {
                        "description": "节点的名字",
                        "example": "emqx@127.0.0.1",
                        "label": "节点名字",
                        "type": "string"
                    },
                    "metrics": {
                        "description": "metrics Description",
                        "label": "metrics",
                        "$ref": "#/components/schemas/bridge.metrics"
                    }
                },
                "type": "object"
            },
            "bridge_mqtt.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "async",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "async_inflight_window": {
                        "default": 100,
                        "description": "异步请求飞行队列窗口大小。",
                        "label": "异步请求飞行队列窗口",
                        "type": "string"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.auth_username_password": {
                "required": [
                    "password",
                    "username",
                    "mechanism"
                ],
                "properties": {
                    "mechanism": {
                        "description": "SASL 认证方法名称。",
                        "label": "认证方法",
                        "symbols": [
                            "plain",
                            "scram_sha_256",
                            "scram_sha_512"
                        ],
                        "type": "enum"
                    },
                    "username": {
                        "description": "SASL 认证的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "SASL 认证的密码。",
                        "label": "密码",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_matrix.post": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "matrix"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.put_api_v1": {
                "required": [
                    "database",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "database": {
                        "description": "InfluxDB 数据库。",
                        "label": "数据库",
                        "type": "string"
                    },
                    "username": {
                        "description": "InfluxDB 用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "InfluxDB 密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_pgsql.put": {
                "required": [
                    "database",
                    "server"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_pgsql.post": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "pgsql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_gcp_pubsub.put": {
                "required": [
                    "service_account_json",
                    "pubsub_topic"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接 HTTP 服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 流水线",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "请求出错时的最大重试次数。",
                        "label": "最大重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时。",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    },
                    "payload_template": {
                        "default": "",
                        "description": "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
                        "label": "HTTP 请求消息体模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "pubsub_topic": {
                        "description": "要发布消息的GCP PubSub主题。",
                        "label": "GCP PubSub 主题",
                        "type": "string"
                    },
                    "service_account_json": {
                        "description": "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                        "label": "GCP 服务账户凭证",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_hstreamdb.put": {
                "required": [
                    "connector"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "direction": {
                        "default": "egress",
                        "description": "桥接的方向， 必须是 egress",
                        "label": "桥接方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "payload": {
                        "default": "${payload}",
                        "description": "要转发到 HStreamDB 的数据内容，支持占位符",
                        "label": "消息内容",
                        "type": "string"
                    },
                    "connector": {
                        "description": "连接器的通用配置。",
                        "example": "hstreamdb:demo",
                        "label": "连接器通用配置。",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/connector_hstreamdb.config"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.get_sharded": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "servers"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "mongo_type": {
                        "default": "sharded",
                        "description": "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
                        "label": "Sharded cluster 模式",
                        "symbols": [
                            "sharded"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_sharded"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.post_single": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "server"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "single",
                        "description": "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。 ",
                        "label": "Standalone 模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_single"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "connector-mqtt.egress": {
                "required": [
                    "remote"
                ],
                "properties": {
                    "local": {
                        "description": "如何从本地 Broker 接收消息相关的配置。",
                        "label": "本地配置",
                        "$ref": "#/components/schemas/connector-mqtt.egress_local"
                    },
                    "remote": {
                        "description": "发送消息到远程 Broker 相关的配置。",
                        "label": "远程配置",
                        "$ref": "#/components/schemas/connector-mqtt.egress_remote"
                    }
                },
                "type": "object"
            },
            "bridge_matrix.put": {
                "required": [
                    "database",
                    "server"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.get_rs": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "replica_set_name",
                    "servers"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "mongo_type": {
                        "default": "rs",
                        "description": "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
                        "label": "Replica set 模式",
                        "symbols": [
                            "rs"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "r_mode": {
                        "default": "master",
                        "description": "读模式。",
                        "label": "读模式",
                        "symbols": [
                            "master",
                            "slave_ok"
                        ],
                        "type": "enum"
                    },
                    "replica_set_name": {
                        "description": "副本集的名称。",
                        "label": "副本集名称",
                        "type": "string"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_rs"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.put_single": {
                "required": [
                    "database",
                    "server"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "single",
                        "description": "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。 ",
                        "label": "Standalone 模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    }
                },
                "type": "object"
            },
            "bridge_webhook.get": {
                "required": [
                    "url",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "Bridge 类型",
                        "symbols": [
                            "webhook"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "Bridge 名字，Bridge 的可读描述",
                        "label": "Bridge 名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_webhook.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接HTTP服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "retry_interval": {
                        "deprecated": "since(\"5.0.4\")",
                        "description": "retry_interval Description",
                        "label": "retry_interval",
                        "type": "duration"
                    },
                    "pool_type": {
                        "default": "random",
                        "description": "连接池的类型，可用类型有`random`, `hash`。",
                        "label": "连接池类型",
                        "symbols": [
                            "random",
                            "hash"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "enable_pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 管道",
                        "type": "string"
                    },
                    "request": {
                        "description": "<br/>如果提供了请求，调用者可以通过以下方式发送 HTTP 请求<br/><code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code><br/>",
                        "label": "HTTP 请求",
                        "$ref": "#/components/schemas/connector-http.request"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "url": {
                        "description": "<br/>HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。<br/>",
                        "label": "HTTP Bridge",
                        "type": "string"
                    },
                    "direction": {
                        "deprecated": "since(\"5.0.12\")",
                        "description": "已废弃，Bridge 的方向，必须是 egress",
                        "label": "Bridge 方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "method": {
                        "default": "post",
                        "description": "<br/>HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求方法",
                        "symbols": [
                            "post",
                            "put",
                            "get",
                            "delete"
                        ],
                        "type": "enum"
                    },
                    "headers": {
                        "default": {
                            "accept": "application/json",
                            "cache-control": "no-cache",
                            "connection": "keep-alive",
                            "content-type": "application/json",
                            "keep-alive": "timeout=5"
                        },
                        "description": "<br/>HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求标头",
                        "type": "object"
                    },
                    "body": {
                        "description": "<br/>HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求正文",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "HTTP 请求失败最大重试次数",
                        "label": "HTTP 请求重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.producer_opts": {
                "required": [
                    "kafka"
                ],
                "properties": {
                    "mqtt": {
                        "description": "需要桥接到 MQTT 源主题。",
                        "label": "MQTT 源主题",
                        "$ref": "#/components/schemas/bridge_kafka.producer_mqtt_opts"
                    },
                    "kafka": {
                        "description": "Kafka 生产者参数。",
                        "label": "生产者参数",
                        "$ref": "#/components/schemas/bridge_kafka.producer_kafka_opts"
                    }
                },
                "type": "object"
            },
            "bridge_redis.put_cluster": {
                "required": [
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "cluster",
                        "description": "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
                        "label": "集群模式",
                        "symbols": [
                            "cluster"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.put": {
                "required": [
                    "bootstrap_hosts"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用（true）或停用该（false）Kafka 数据桥接。",
                        "label": "启用或停用",
                        "type": "boolean"
                    },
                    "bootstrap_hosts": {
                        "description": "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。",
                        "label": "主机列表",
                        "type": "string"
                    },
                    "connect_timeout": {
                        "default": "5s",
                        "description": "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "min_metadata_refresh_interval": {
                        "default": "3s",
                        "description": "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
                        "label": "元数据刷新最小间隔",
                        "type": "duration"
                    },
                    "metadata_request_timeout": {
                        "default": "5s",
                        "description": "刷新元数据时最大等待时长。",
                        "label": "元数据请求超时",
                        "type": "duration"
                    },
                    "authentication": {
                        "default": "none",
                        "description": "认证参数。",
                        "label": "认证",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
                            },
                            {
                                "$ref": "#/components/schemas/bridge_kafka.auth_username_password"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "producer": {
                        "description": "本地 MQTT 数据源和 Kafka 桥接的配置。",
                        "label": "MQTT 到 Kafka",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/bridge_kafka.producer_opts"
                            },
                            {
                                "symbols": [
                                    "none"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "socket_opts": {
                        "description": "更多 Socket 参数设置。",
                        "label": "Socket 参数",
                        "$ref": "#/components/schemas/bridge_kafka.socket_opts"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_influxdb.post_api_v2": {
                "required": [
                    "name",
                    "type",
                    "token",
                    "org",
                    "bucket",
                    "write_syntax"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "write_syntax": {
                        "description": "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>",
                        "format": "sql",
                        "label": "写语句",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "default": "127.0.0.1:8086",
                        "description": "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "precision": {
                        "default": "ms",
                        "description": "InfluxDB 时间精度。",
                        "label": "时间精度",
                        "symbols": [
                            "ns",
                            "us",
                            "ms",
                            "s"
                        ],
                        "type": "enum"
                    },
                    "bucket": {
                        "description": "InfluxDB bucket 名称。",
                        "label": "Bucket",
                        "type": "string"
                    },
                    "org": {
                        "description": "InfluxDB 组织名称。",
                        "label": "组织",
                        "type": "string"
                    },
                    "token": {
                        "description": "InfluxDB token。",
                        "label": "Token",
                        "type": "string"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "influxdb_api_v2"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "emqx_connector_mongo.topology": {
                "properties": {
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "max_overflow": {
                        "default": 0,
                        "description": "最大溢出。",
                        "label": "最大溢出",
                        "minimum": 1,
                        "type": "number"
                    },
                    "overflow_ttl": {
                        "description": "当池内工人太多时，等待多久清除多余工人。",
                        "label": "溢出TTL",
                        "type": "duration"
                    },
                    "overflow_check_period": {
                        "description": "检查是否有超过配置的工人的周期（\"溢出\"）。",
                        "label": "溢出检查周期",
                        "type": "duration"
                    },
                    "local_threshold_ms": {
                        "description": "在多个合适的MongoDB实例中进行选择的延迟窗口的大小。",
                        "label": "本地阈值",
                        "type": "duration"
                    },
                    "connect_timeout_ms": {
                        "description": "超时重连的等待时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "socket_timeout_ms": {
                        "description": "在尝试超时之前，在套接字上尝试发送或接收的持续时间。",
                        "label": "套接字操作超时",
                        "type": "duration"
                    },
                    "server_selection_timeout_ms": {
                        "description": "指定在抛出异常之前为服务器选择阻断多长时间。",
                        "label": "服务器选择超时",
                        "type": "duration"
                    },
                    "wait_queue_timeout_ms": {
                        "description": "工作者等待连接可用的最长时间。",
                        "label": "等待队列超时",
                        "type": "duration"
                    },
                    "heartbeat_frequency_ms": {
                        "description": "控制驱动程序何时检查MongoDB部署的状态。指定检查的间隔时间，从上一次检查结束到下一次检查开始计算。",
                        "label": "心跳期",
                        "type": "duration"
                    },
                    "min_heartbeat_frequency_ms": {
                        "description": "心跳间的最小间隙",
                        "label": "最小心跳周期",
                        "type": "duration"
                    }
                },
                "type": "object"
            },
            "bridge_gcp_pubsub.get": {
                "required": [
                    "service_account_json",
                    "pubsub_topic",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "桥接类型",
                        "label": "桥接类型",
                        "symbols": [
                            "gcp_pubsub"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接 HTTP 服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 流水线",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "请求出错时的最大重试次数。",
                        "label": "最大重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时。",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    },
                    "payload_template": {
                        "default": "",
                        "description": "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
                        "label": "HTTP 请求消息体模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "pubsub_topic": {
                        "description": "要发布消息的GCP PubSub主题。",
                        "label": "GCP PubSub 主题",
                        "type": "string"
                    },
                    "service_account_json": {
                        "description": "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                        "label": "GCP 服务账户凭证",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "connector-mqtt.ingress_remote": {
                "required": [
                    "topic"
                ],
                "properties": {
                    "topic": {
                        "description": "从远程broker的哪个topic接收消息",
                        "label": "远程主题",
                        "type": "string"
                    },
                    "qos": {
                        "default": 1,
                        "description": "订阅远程borker时要使用的 QoS 级别",
                        "label": "远程 QoS",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "symbols": [
                                    0,
                                    1,
                                    2
                                ],
                                "type": "enum"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "broker.ssl_client_opts": {
                "properties": {
                    "cacertfile": {
                        "description": "<br/>受信任的PEM格式 CA  证书捆绑文件<br/><br/>此文件中的证书用于验证TLS对等方的证书。<br/>如果要信任新 CA，请将新证书附加到文件中。<br/>无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/><br/>注意：从文件中失效（删除）证书不会影响已建立的连接。<br/>",
                        "label": "CA 证书文件",
                        "type": "string"
                    },
                    "certfile": {
                        "description": "<br/>PEM格式证书链文件<br/><br/>此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，<br/>然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。<br/>根 CA 证书是可选的，如果想要添加，应加到文件到最末端。<br/>",
                        "label": "证书文件",
                        "type": "string"
                    },
                    "keyfile": {
                        "description": "PEM格式的私钥文件。",
                        "label": "私钥文件",
                        "type": "string"
                    },
                    "verify": {
                        "default": "verify_none",
                        "description": "启用或禁用对等验证。",
                        "label": "对等验证",
                        "symbols": [
                            "verify_peer",
                            "verify_none"
                        ],
                        "type": "enum"
                    },
                    "reuse_sessions": {
                        "default": true,
                        "description": "启用 TLS 会话重用。",
                        "label": "TLS 会话重用",
                        "type": "boolean"
                    },
                    "depth": {
                        "default": 10,
                        "description": "<br/>在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。<br/>因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/><br/>如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/><br/>如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。<br/>",
                        "label": "CA 证书深度",
                        "type": "number"
                    },
                    "password": {
                        "description": "<br/>包含用户密码的字符串。<br/>仅在私钥文件受密码保护时使用。<br/>",
                        "example": "",
                        "format": "password",
                        "label": "秘钥文件密码",
                        "type": "string"
                    },
                    "versions": {
                        "default": [
                            "tlsv1.3",
                            "tlsv1.2",
                            "tlsv1.1",
                            "tlsv1"
                        ],
                        "description": "<br/>支持所有TLS/DTLS版本<br/><br/><br/>注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "SSL 版本",
                        "type": "array"
                    },
                    "ciphers": {
                        "default": "",
                        "description": "<br/>此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如<br/><code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或<br/><code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。<br/><br/><br/>密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。<br/>选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。<br/><br/>名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。<br/>EMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/><br/>注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。<br/>不兼容的密码套件将被自动删除。<br/><br/>例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。<br/><br/><br/><br/>注：PSK 的 Ciphers 不支持 tlsv1.3<br/><br/>如果打算使用PSK密码套件 <code>tlsv1.3</code>。应在<code>ssl.versions</code>中禁用。<br/><br/><br/><br/>PSK 密码套件：<br/><code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,<br/>RSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,<br/>RSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,<br/>RSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br/><br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "",
                        "type": "array"
                    },
                    "user_lookup_fun": {
                        "default": "emqx_tls_psk:lookup",
                        "description": "用于查找预共享密钥（PSK）标识的 EMQX 内部回调。",
                        "label": "SSL PSK 用户回调",
                        "type": "string"
                    },
                    "secure_renegotiate": {
                        "default": true,
                        "description": "<br/>SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。<br/>RFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。<br/>",
                        "label": "SSL 重新协商",
                        "type": "boolean"
                    },
                    "enable": {
                        "default": false,
                        "description": "启用 TLS。",
                        "label": "启用 TLS",
                        "type": "boolean"
                    },
                    "server_name_indication": {
                        "description": "<br/>指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/><br/>例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，<br/>例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/><br/>如果未指定，它将默认为使用的主机名字符串<br/>建立连接，除非使用 IP 地址<br/><br/>然后，主机名也用于对等机的主机名验证证书<br/><br/>特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。<br/>",
                        "example": "disable",
                        "label": "服务器名称指示",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "symbols": [
                                    "disable"
                                ],
                                "type": "enum"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "bridge_redis.get_single": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "server",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "single",
                        "description": "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
                        "label": "单机模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_single"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "bridge_webhook.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "async",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "async_inflight_window": {
                        "default": 100,
                        "description": "异步请求飞行队列窗口大小。",
                        "label": "异步请求飞行队列窗口",
                        "type": "string"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "bridge_redis.get_cluster": {
                "required": [
                    "name",
                    "type",
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "cluster",
                        "description": "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
                        "label": "集群模式",
                        "symbols": [
                            "cluster"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_cluster"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "bridge_timescale.get": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "pgsql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_mysql.get": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "mysql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mysql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "default": "root",
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_redis.post_cluster": {
                "required": [
                    "name",
                    "type",
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "cluster",
                        "description": "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
                        "label": "集群模式",
                        "symbols": [
                            "cluster"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_cluster"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mqtt.put": {
                "required": [
                    "server"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mqtt.creation_opts"
                    },
                    "mode": {
                        "default": "cluster_shareload",
                        "description": "<br/>MQTT 桥的模式。 <br/><br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。<br/>",
                        "label": "MQTT 桥接模式",
                        "symbols": [
                            "cluster_shareload"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "远程 MQTT Broker的主机和端口。",
                        "label": "Broker主机和端口",
                        "type": "string"
                    },
                    "clientid_prefix": {
                        "description": "可选的前缀，用于在出口网桥使用的clientid前加上前缀。",
                        "label": "客户ID前缀",
                        "type": "string"
                    },
                    "reconnect_interval": {
                        "default": "15s",
                        "description": "Reconnect interval. Delay for the MQTT bridge to retry establishing the connection in case of transportation failure. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "reconnect_interval",
                        "type": "string"
                    },
                    "proto_ver": {
                        "default": "v4",
                        "description": "MQTT 协议版本",
                        "label": "协议版本",
                        "symbols": [
                            "v3",
                            "v4",
                            "v5"
                        ],
                        "type": "enum"
                    },
                    "bridge_mode": {
                        "default": false,
                        "description": "<br/>是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>    ",
                        "label": "Bridge 模式",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "MQTT 协议的用户名",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "MQTT 协议的密码",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "clean_start": {
                        "default": true,
                        "description": "MQTT 清除会话",
                        "label": "清除会话",
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": "300s",
                        "description": "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "keepalive",
                        "type": "string"
                    },
                    "retry_interval": {
                        "default": "15s",
                        "description": "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "retry_interval",
                        "type": "string"
                    },
                    "max_inflight": {
                        "default": 32,
                        "description": "MQTT 协议的最大飞行（已发送但未确认）消息",
                        "label": "最大飞行消息",
                        "minimum": 1,
                        "type": "number"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "ingress": {
                        "description": "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。<br/>                ",
                        "label": "入方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.ingress"
                    },
                    "egress": {
                        "description": "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。<br/>                ",
                        "label": "出方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.egress"
                    }
                },
                "type": "object"
            },
            "bridge_hstreamdb.get": {
                "required": [
                    "connector",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "hstreamdb"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "direction": {
                        "default": "egress",
                        "description": "桥接的方向， 必须是 egress",
                        "label": "桥接方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "payload": {
                        "default": "${payload}",
                        "description": "要转发到 HStreamDB 的数据内容，支持占位符",
                        "label": "消息内容",
                        "type": "string"
                    },
                    "connector": {
                        "description": "连接器的通用配置。",
                        "example": "hstreamdb:demo",
                        "label": "连接器通用配置。",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/connector_hstreamdb.config"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "bridge_pgsql.get": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "pgsql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_matrix.get": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "pgsql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_mqtt.get": {
                "required": [
                    "server"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mqtt.creation_opts"
                    },
                    "mode": {
                        "default": "cluster_shareload",
                        "description": "<br/>MQTT 桥的模式。 <br/><br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。<br/>",
                        "label": "MQTT 桥接模式",
                        "symbols": [
                            "cluster_shareload"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "远程 MQTT Broker的主机和端口。",
                        "label": "Broker主机和端口",
                        "type": "string"
                    },
                    "clientid_prefix": {
                        "description": "可选的前缀，用于在出口网桥使用的clientid前加上前缀。",
                        "label": "客户ID前缀",
                        "type": "string"
                    },
                    "reconnect_interval": {
                        "default": "15s",
                        "description": "Reconnect interval. Delay for the MQTT bridge to retry establishing the connection in case of transportation failure. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "reconnect_interval",
                        "type": "string"
                    },
                    "proto_ver": {
                        "default": "v4",
                        "description": "MQTT 协议版本",
                        "label": "协议版本",
                        "symbols": [
                            "v3",
                            "v4",
                            "v5"
                        ],
                        "type": "enum"
                    },
                    "bridge_mode": {
                        "default": false,
                        "description": "<br/>是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>    ",
                        "label": "Bridge 模式",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "MQTT 协议的用户名",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "MQTT 协议的密码",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "clean_start": {
                        "default": true,
                        "description": "MQTT 清除会话",
                        "label": "清除会话",
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": "300s",
                        "description": "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "keepalive",
                        "type": "string"
                    },
                    "retry_interval": {
                        "default": "15s",
                        "description": "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "retry_interval",
                        "type": "string"
                    },
                    "max_inflight": {
                        "default": 32,
                        "description": "MQTT 协议的最大飞行（已发送但未确认）消息",
                        "label": "最大飞行消息",
                        "minimum": 1,
                        "type": "number"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "ingress": {
                        "description": "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。<br/>                ",
                        "label": "入方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.ingress"
                    },
                    "egress": {
                        "description": "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。<br/>                ",
                        "label": "出方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.egress"
                    }
                },
                "type": "object"
            },
            "bridge_mysql.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "async",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "enable_batch": {
                        "default": true,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用批量模式。",
                        "label": "启用批量模式",
                        "type": "boolean"
                    },
                    "batch_size": {
                        "default": 1,
                        "description": "批量请求大小。如果设为1，则无批处理。",
                        "label": "批量请求大小",
                        "type": "string"
                    },
                    "batch_time": {
                        "default": "20ms",
                        "description": "最大批量请求等待时间。",
                        "label": "批量等待间隔",
                        "type": "duration"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "bridge_redis.put_sentinel": {
                "required": [
                    "database",
                    "sentinel",
                    "servers",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "servers": {
                        "description": "<br/><br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "sentinel",
                        "description": "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
                        "label": "哨兵模式",
                        "symbols": [
                            "sentinel"
                        ],
                        "type": "enum"
                    },
                    "sentinel": {
                        "description": "Redis 哨兵模式下的集群名称。",
                        "label": "集群名称",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.producer_kafka_opts": {
                "required": [
                    "topic"
                ],
                "properties": {
                    "topic": {
                        "description": "Kafka 主题名称",
                        "label": "Kafka 主题名称",
                        "type": "string"
                    },
                    "message": {
                        "description": "用于生成 Kafka 消息的模版。",
                        "label": "Kafka 消息模版",
                        "$ref": "#/components/schemas/bridge_kafka.kafka_message"
                    },
                    "max_batch_bytes": {
                        "default": "896KB",
                        "description": "最大消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码索需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。",
                        "label": "最大批量字节数",
                        "type": "byteSize"
                    },
                    "compression": {
                        "default": "no_compression",
                        "description": "压缩方法。",
                        "label": "压缩",
                        "symbols": [
                            "no_compression",
                            "snappy",
                            "gzip"
                        ],
                        "type": "enum"
                    },
                    "partition_strategy": {
                        "default": "random",
                        "description": "设置消息发布时应该如何选择 Kafka 分区。<br/><br/><code>random</code>: 为每个消息随机选择一个分区。<br/><code>key_dispatch</code>: Hash Kafka message key to a partition number<br/>",
                        "label": "分区选择策略",
                        "symbols": [
                            "random",
                            "key_dispatch"
                        ],
                        "type": "enum"
                    },
                    "required_acks": {
                        "default": "all_isr",
                        "description": "设置 Kafka leader 在返回给 EMQX 确认之前需要等待多少个 follower 的确认。<br/><br/><code>all_isr</code>: 需要所有的在线复制者都确认。<br/><code>leader_only</code>: 仅需要分区 leader 确认。<br/><code>none</code>: 无需 Kafka 回复任何确认。<br/>",
                        "label": "Kafka 确认数量",
                        "symbols": [
                            "all_isr",
                            "leader_only",
                            "none"
                        ],
                        "type": "enum"
                    },
                    "partition_count_refresh_interval": {
                        "default": "60s",
                        "description": "配置 Kafka 刷新分区数量的时间间隔。<br/>EMQX 发现 Kafka 分区数量增加后，会开始按 <code>partition_strategy<code> 配置，把消息发送到新的分区中。",
                        "label": "分区数量刷新间隔",
                        "type": "duration"
                    },
                    "max_inflight": {
                        "default": 10,
                        "description": "设置 Kafka 生产者（每个分区一个）在收到 Kafka 的确认前最多发送多少个请求（批量）。调大这个值通常可以增加吞吐量，但是，当该值设置大于 1 是存在消息乱序的风险。",
                        "label": "飞行窗口",
                        "type": "string"
                    },
                    "buffer": {
                        "description": "配置消息缓存的相关参数。<br/><br/>当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。",
                        "label": "消息缓存",
                        "$ref": "#/components/schemas/bridge_kafka.producer_buffer"
                    }
                },
                "type": "object"
            },
            "bridge_mqtt.post": {
                "required": [
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 的类型",
                        "label": "Bridge 类型",
                        "symbols": [
                            "mqtt"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "Bridge 名字，Bridge 的可读描述",
                        "label": "Bridge 名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mqtt.creation_opts"
                    },
                    "mode": {
                        "default": "cluster_shareload",
                        "description": "<br/>MQTT 桥的模式。 <br/><br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。<br/>",
                        "label": "MQTT 桥接模式",
                        "symbols": [
                            "cluster_shareload"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "远程 MQTT Broker的主机和端口。",
                        "label": "Broker主机和端口",
                        "type": "string"
                    },
                    "clientid_prefix": {
                        "description": "可选的前缀，用于在出口网桥使用的clientid前加上前缀。",
                        "label": "客户ID前缀",
                        "type": "string"
                    },
                    "reconnect_interval": {
                        "default": "15s",
                        "description": "Reconnect interval. Delay for the MQTT bridge to retry establishing the connection in case of transportation failure. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "reconnect_interval",
                        "type": "string"
                    },
                    "proto_ver": {
                        "default": "v4",
                        "description": "MQTT 协议版本",
                        "label": "协议版本",
                        "symbols": [
                            "v3",
                            "v4",
                            "v5"
                        ],
                        "type": "enum"
                    },
                    "bridge_mode": {
                        "default": false,
                        "description": "<br/>是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>    ",
                        "label": "Bridge 模式",
                        "type": "boolean"
                    },
                    "username": {
                        "description": "MQTT 协议的用户名",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "MQTT 协议的密码",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "clean_start": {
                        "default": true,
                        "description": "MQTT 清除会话",
                        "label": "清除会话",
                        "type": "boolean"
                    },
                    "keepalive": {
                        "default": "300s",
                        "description": "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "keepalive",
                        "type": "string"
                    },
                    "retry_interval": {
                        "default": "15s",
                        "description": "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
                        "label": "retry_interval",
                        "type": "string"
                    },
                    "max_inflight": {
                        "default": 32,
                        "description": "MQTT 协议的最大飞行（已发送但未确认）消息",
                        "label": "最大飞行消息",
                        "minimum": 1,
                        "type": "number"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "ingress": {
                        "description": "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。<br/>                ",
                        "label": "入方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.ingress"
                    },
                    "egress": {
                        "description": "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。<br/>                ",
                        "label": "出方向配置",
                        "$ref": "#/components/schemas/connector-mqtt.egress"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.kafka_message": {
                "properties": {
                    "key": {
                        "default": "${.clientid}",
                        "description": "生成 Kafka 消息 Key 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code> ，而非空字符串。",
                        "label": "消息的 Key",
                        "type": "string"
                    },
                    "value": {
                        "default": "${.}",
                        "description": "生成 Kafka 消息 Value 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code>，而非空字符串。",
                        "label": "消息的 Value",
                        "type": "string"
                    },
                    "timestamp": {
                        "default": "${.timestamp}",
                        "description": "生成 Kafka 消息时间戳的模版。该时间必需是一个整型数值（可以是字符串格式）例如 <code>1661326462115</code> 或 <code>'1661326462115'</code>。当所需的输入字段不存在，或不是一个整型时，则会使用当前系统时间。",
                        "label": "消息的时间戳",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_timescale.put": {
                "required": [
                    "database",
                    "server"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.get_single": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "server"
                ],
                "properties": {
                    "status": {
                        "description": "Bridge 的状态",
                        "label": "Bridge 状态",
                        "symbols": [
                            "connected",
                            "disconnected",
                            "connecting"
                        ],
                        "type": "enum"
                    },
                    "node_status": {
                        "description": "节点的状态",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_status"
                        },
                        "label": "节点的状态",
                        "type": "array"
                    },
                    "mongo_type": {
                        "default": "single",
                        "description": "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。 ",
                        "label": "Standalone 模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    },
                    "type": {
                        "description": "桥接类型。",
                        "label": "桥接类型",
                        "symbols": [
                            "mongodb_single"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名称。",
                        "label": "桥接名称",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.producer_mqtt_opts": {
                "properties": {
                    "topic": {
                        "description": "指定 MQTT 主题作为桥接的数据源",
                        "label": "源 MQTT 主题",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.socket_opts": {
                "properties": {
                    "sndbuf": {
                        "default": "1024KB",
                        "description": "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
                        "label": "Socket 发送缓存大小",
                        "type": "byteSize"
                    },
                    "recbuf": {
                        "default": "1024KB",
                        "description": "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
                        "label": "Socket 收包缓存大小",
                        "type": "byteSize"
                    },
                    "nodelay": {
                        "default": true,
                        "description": "设置 ‘true' 让系统内核立即发送。否则当需要发送当内容很少时，可能会有一定延迟（默认 40 毫秒）。",
                        "label": "是否延迟发送",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "bridge_redis.post_single": {
                "required": [
                    "name",
                    "type",
                    "database",
                    "server",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "single",
                        "description": "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
                        "label": "单机模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "redis_single"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "connector-mqtt.ingress_local": {
                "properties": {
                    "topic": {
                        "description": "<br/>向本地broker的哪个topic发送消息。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "本地主题",
                        "type": "string"
                    },
                    "qos": {
                        "default": "${qos}",
                        "description": "<br/>待发送 MQTT 消息的 QoS。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "本地 QoS",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "symbols": [
                                    0,
                                    1,
                                    2
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "retain": {
                        "default": "${retain}",
                        "description": "<br/>要发送的 MQTT 消息的“保留”标志。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "保留消息标志",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "boolean"
                            }
                        ]
                    },
                    "payload": {
                        "description": "<br/>要发送的 MQTT 消息的负载。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "消息负载",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_mysql.post": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "mysql"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mysql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "default": "root",
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_webhook.post": {
                "required": [
                    "url",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "Bridge 类型",
                        "symbols": [
                            "webhook"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "Bridge 名字，Bridge 的可读描述",
                        "label": "Bridge 名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_webhook.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接HTTP服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "retry_interval": {
                        "deprecated": "since(\"5.0.4\")",
                        "description": "retry_interval Description",
                        "label": "retry_interval",
                        "type": "duration"
                    },
                    "pool_type": {
                        "default": "random",
                        "description": "连接池的类型，可用类型有`random`, `hash`。",
                        "label": "连接池类型",
                        "symbols": [
                            "random",
                            "hash"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "enable_pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 管道",
                        "type": "string"
                    },
                    "request": {
                        "description": "<br/>如果提供了请求，调用者可以通过以下方式发送 HTTP 请求<br/><code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code><br/>",
                        "label": "HTTP 请求",
                        "$ref": "#/components/schemas/connector-http.request"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "url": {
                        "description": "<br/>HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。<br/>",
                        "label": "HTTP Bridge",
                        "type": "string"
                    },
                    "direction": {
                        "deprecated": "since(\"5.0.12\")",
                        "description": "已废弃，Bridge 的方向，必须是 egress",
                        "label": "Bridge 方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "method": {
                        "default": "post",
                        "description": "<br/>HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求方法",
                        "symbols": [
                            "post",
                            "put",
                            "get",
                            "delete"
                        ],
                        "type": "enum"
                    },
                    "headers": {
                        "default": {
                            "accept": "application/json",
                            "cache-control": "no-cache",
                            "connection": "keep-alive",
                            "content-type": "application/json",
                            "keep-alive": "timeout=5"
                        },
                        "description": "<br/>HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求标头",
                        "type": "object"
                    },
                    "body": {
                        "description": "<br/>HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求正文",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "HTTP 请求失败最大重试次数",
                        "label": "HTTP 请求重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    }
                },
                "type": "object"
            },
            "bridge_kafka.auth_gssapi_kerberos": {
                "required": [
                    "kerberos_keytab_file",
                    "kerberos_principal"
                ],
                "properties": {
                    "kerberos_principal": {
                        "description": "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中",
                        "label": "Kerberos Principal",
                        "type": "string"
                    },
                    "kerberos_keytab_file": {
                        "description": "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。",
                        "label": "Kerberos keytab 文件",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_redis.put_single": {
                "required": [
                    "database",
                    "server",
                    "command_template"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "command_template": {
                        "description": "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。<br/>",
                        "items": {
                            "type": "string"
                        },
                        "label": "Redis Command  模板",
                        "type": "array"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "redis_type": {
                        "default": "single",
                        "description": "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
                        "label": "单机模式",
                        "symbols": [
                            "single"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "database": {
                        "default": 0,
                        "description": "Redis 数据库 ID。",
                        "label": "数据库 ID",
                        "type": "number"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_webhook.put": {
                "required": [
                    "url"
                ],
                "properties": {
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_webhook.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接HTTP服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "retry_interval": {
                        "deprecated": "since(\"5.0.4\")",
                        "description": "retry_interval Description",
                        "label": "retry_interval",
                        "type": "duration"
                    },
                    "pool_type": {
                        "default": "random",
                        "description": "连接池的类型，可用类型有`random`, `hash`。",
                        "label": "连接池类型",
                        "symbols": [
                            "random",
                            "hash"
                        ],
                        "type": "enum"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "enable_pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 管道",
                        "type": "string"
                    },
                    "request": {
                        "description": "<br/>如果提供了请求，调用者可以通过以下方式发送 HTTP 请求<br/><code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code><br/>",
                        "label": "HTTP 请求",
                        "$ref": "#/components/schemas/connector-http.request"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "url": {
                        "description": "<br/>HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。<br/>",
                        "label": "HTTP Bridge",
                        "type": "string"
                    },
                    "direction": {
                        "deprecated": "since(\"5.0.12\")",
                        "description": "已废弃，Bridge 的方向，必须是 egress",
                        "label": "Bridge 方向",
                        "symbols": [
                            "egress"
                        ],
                        "type": "enum"
                    },
                    "local_topic": {
                        "description": "<br/>发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "method": {
                        "default": "post",
                        "description": "<br/>HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求方法",
                        "symbols": [
                            "post",
                            "put",
                            "get",
                            "delete"
                        ],
                        "type": "enum"
                    },
                    "headers": {
                        "default": {
                            "accept": "application/json",
                            "cache-control": "no-cache",
                            "connection": "keep-alive",
                            "content-type": "application/json",
                            "keep-alive": "timeout=5"
                        },
                        "description": "<br/>HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求标头",
                        "type": "object"
                    },
                    "body": {
                        "description": "<br/>HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。<br/>",
                        "label": "HTTP 请求正文",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "HTTP 请求失败最大重试次数",
                        "label": "HTTP 请求重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    }
                },
                "type": "object"
            },
            "connector_hstreamdb.config": {
                "required": [
                    "pool_size",
                    "stream",
                    "url"
                ],
                "properties": {
                    "url": {
                        "description": "HStreamDB 服务器 URL",
                        "label": "HStreamDB 服务器 URL",
                        "type": "string"
                    },
                    "stream": {
                        "description": "HStreamDB 流名称",
                        "label": "HStreamDB 流名称",
                        "type": "string"
                    },
                    "ordering_key": {
                        "description": "HStreamDB 分区键",
                        "label": "HStreamDB 分区键",
                        "type": "string"
                    },
                    "pool_size": {
                        "description": "HStreamDB 连接池大小",
                        "label": "HStreamDB 连接池大小",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "resource_schema.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "async",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "async_inflight_window": {
                        "default": 100,
                        "description": "异步请求飞行队列窗口大小。",
                        "label": "异步请求飞行队列窗口",
                        "type": "string"
                    },
                    "enable_batch": {
                        "default": true,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用批量模式。",
                        "label": "启用批量模式",
                        "type": "boolean"
                    },
                    "batch_size": {
                        "default": 1,
                        "description": "批量请求大小。如果设为1，则无批处理。",
                        "label": "批量请求大小",
                        "type": "string"
                    },
                    "batch_time": {
                        "default": "20ms",
                        "description": "最大批量请求等待时间。",
                        "label": "批量等待间隔",
                        "type": "duration"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "bridge_timescale.post": {
                "required": [
                    "database",
                    "server",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Bridge 类型",
                        "label": "桥接类型",
                        "symbols": [
                            "timescale"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用桥接",
                        "label": "启用/禁用桥接",
                        "type": "boolean"
                    },
                    "sql": {
                        "default": "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))",
                        "description": "SQL 模板",
                        "format": "sql",
                        "label": "SQL 模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_pgsql.creation_opts"
                    },
                    "server": {
                        "description": "<br/>将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。<br/>",
                        "label": "服务器地址",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auto_reconnect": {
                        "default": true,
                        "deprecated": "since(\"v5.0.15\")",
                        "description": "已弃用。自动重连数据库。",
                        "label": "已弃用。自动重连数据库",
                        "type": "boolean"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    }
                },
                "type": "object"
            },
            "bridge_gcp_pubsub.post": {
                "required": [
                    "service_account_json",
                    "pubsub_topic",
                    "name",
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "桥接类型",
                        "label": "桥接类型",
                        "symbols": [
                            "gcp_pubsub"
                        ],
                        "type": "enum"
                    },
                    "name": {
                        "description": "桥接名字，可读描述",
                        "label": "桥接名字",
                        "type": "string"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用/禁用 Bridge",
                        "label": "启用/禁用 Bridge",
                        "type": "boolean"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/resource_schema.creation_opts"
                    },
                    "connect_timeout": {
                        "default": "15s",
                        "description": "连接 HTTP 服务器的超时时间。",
                        "label": "连接超时",
                        "type": "duration"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "pipelining": {
                        "default": 100,
                        "description": "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
                        "label": "HTTP 流水线",
                        "type": "string"
                    },
                    "max_retries": {
                        "default": 2,
                        "description": "请求出错时的最大重试次数。",
                        "label": "最大重试次数",
                        "minimum": 1,
                        "type": "number"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "HTTP 请求超时。",
                        "label": "HTTP 请求超时",
                        "type": "duration"
                    },
                    "payload_template": {
                        "default": "",
                        "description": "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
                        "label": "HTTP 请求消息体模板",
                        "type": "string"
                    },
                    "local_topic": {
                        "description": "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。<br/>",
                        "label": "本地 Topic",
                        "type": "string"
                    },
                    "pubsub_topic": {
                        "description": "要发布消息的GCP PubSub主题。",
                        "label": "GCP PubSub 主题",
                        "type": "string"
                    },
                    "service_account_json": {
                        "description": "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。",
                        "label": "GCP 服务账户凭证",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bridge_pgsql.creation_opts": {
                "properties": {
                    "worker_pool_size": {
                        "default": 16,
                        "description": "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
                        "label": "缓存池大小",
                        "minimum": 1,
                        "type": "number"
                    },
                    "health_check_interval": {
                        "default": "15s",
                        "description": "健康检查间隔。",
                        "label": "健康检查间隔",
                        "type": "duration"
                    },
                    "start_after_created": {
                        "default": "true",
                        "description": "是否在创建资源后立即启动资源。",
                        "label": "创建后立即启动",
                        "type": "boolean"
                    },
                    "start_timeout": {
                        "default": "5s",
                        "description": "如果选择了创建后立即启动资源，此选项用来设置等待资源启动的超时时间，单位毫秒。",
                        "label": "启动超时时间",
                        "type": "duration"
                    },
                    "auto_restart_interval": {
                        "default": "60s",
                        "description": "资源断开以后，自动重连的时间间隔。",
                        "label": "自动重连间隔",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "query_mode": {
                        "default": "async",
                        "description": "请求模式。可选 '同步/异步'，默认为'同步'模式。",
                        "label": "请求模式",
                        "symbols": [
                            "sync",
                            "async"
                        ],
                        "type": "enum"
                    },
                    "request_timeout": {
                        "default": "15s",
                        "description": "请求的超时。 如果<code>query_mode</code>是<code>sync</code>，对资源的调用将在超时前被阻断这一时间。",
                        "label": "请求超时",
                        "oneOf": [
                            {
                                "type": "duration"
                            },
                            {
                                "symbols": [
                                    "infinity"
                                ],
                                "type": "enum"
                            }
                        ]
                    },
                    "enable_batch": {
                        "default": true,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用批量模式。",
                        "label": "启用批量模式",
                        "type": "boolean"
                    },
                    "batch_size": {
                        "default": 1,
                        "description": "批量请求大小。如果设为1，则无批处理。",
                        "label": "批量请求大小",
                        "type": "string"
                    },
                    "batch_time": {
                        "default": "20ms",
                        "description": "最大批量请求等待时间。",
                        "label": "批量等待间隔",
                        "type": "duration"
                    },
                    "enable_queue": {
                        "default": false,
                        "deprecated": "since(\"v5.0.14\")",
                        "description": "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
                        "label": "启用磁盘缓存队列",
                        "type": "boolean"
                    },
                    "max_queue_bytes": {
                        "default": "100MB",
                        "description": "每个缓存 worker 允许使用的最大字节数。",
                        "label": "缓存队列最大长度",
                        "type": "byteSize"
                    }
                },
                "type": "object"
            },
            "bridge_mongodb.put_sharded": {
                "required": [
                    "database",
                    "servers"
                ],
                "properties": {
                    "mongo_type": {
                        "default": "sharded",
                        "description": "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
                        "label": "Sharded cluster 模式",
                        "symbols": [
                            "sharded"
                        ],
                        "type": "enum"
                    },
                    "servers": {
                        "description": "<br/>集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。<br/>",
                        "label": "服务器列表",
                        "type": "string"
                    },
                    "w_mode": {
                        "default": "unsafe",
                        "description": "写模式。",
                        "label": "写模式",
                        "symbols": [
                            "unsafe",
                            "safe"
                        ],
                        "type": "enum"
                    },
                    "srv_record": {
                        "default": false,
                        "description": "使用 DNS SRV 记录。",
                        "label": "SRV 记录",
                        "type": "boolean"
                    },
                    "pool_size": {
                        "default": 8,
                        "description": "桥接远端服务时使用的连接池大小。",
                        "label": "连接池大小",
                        "type": "string"
                    },
                    "username": {
                        "description": "内部数据库的用户名。",
                        "label": "用户名",
                        "type": "string"
                    },
                    "password": {
                        "description": "内部数据库密码。",
                        "format": "password",
                        "label": "密码",
                        "type": "string"
                    },
                    "auth_source": {
                        "description": "与用户证书关联的数据库名称。",
                        "label": "认证源",
                        "type": "string"
                    },
                    "database": {
                        "description": "数据库名字。",
                        "label": "数据库名字",
                        "type": "string"
                    },
                    "topology": {
                        "description": "topology Description",
                        "label": "topology",
                        "$ref": "#/components/schemas/emqx_connector_mongo.topology"
                    },
                    "ssl": {
                        "default": {
                            "enable": false
                        },
                        "description": "启用 SSL 连接。",
                        "label": "启用SSL",
                        "$ref": "#/components/schemas/broker.ssl_client_opts"
                    },
                    "enable": {
                        "default": true,
                        "description": "启用或停用该MongoDB桥",
                        "label": "启用或禁用",
                        "type": "boolean"
                    },
                    "collection": {
                        "default": "mqtt",
                        "description": "数据将被存储到的集合",
                        "label": "将要使用的集合（Collection）",
                        "type": "string"
                    },
                    "payload_template": {
                        "description": "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。",
                        "label": "有效载荷模板",
                        "type": "string"
                    },
                    "resource_opts": {
                        "default": {},
                        "description": "资源相关的选项。",
                        "label": "资源选项",
                        "$ref": "#/components/schemas/bridge_mongodb.creation_opts"
                    }
                },
                "type": "object"
            }
        }
    },
    "info": {
        "title": "EMQX Data Bridge API Schema",
        "version": "0.1.0"
    },
    "paths": {
        "/bridges": {
            "get": {
                "items": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/bridge_matrix.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_timescale.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_redis.get_cluster"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_redis.get_sentinel"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_redis.get_single"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_influxdb.get_api_v2"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_influxdb.get_api_v1"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_hstreamdb.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_mongodb.get_single"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_mongodb.get_sharded"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_mongodb.get_rs"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_pgsql.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_mysql.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_kafka.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_gcp_pubsub.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_mqtt.get"
                        },
                        {
                            "$ref": "#/components/schemas/bridge_webhook.get"
                        }
                    ]
                },
                "type": "array"
            }
        },
        "/bridges/:id": {
            "get": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/bridge_matrix.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_timescale.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_cluster"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_sentinel"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_single"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_influxdb.get_api_v2"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_influxdb.get_api_v1"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_hstreamdb.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_single"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_sharded"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_rs"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_pgsql.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mysql.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_kafka.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_gcp_pubsub.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mqtt.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_webhook.get"
                    }
                ]
            },
            "put": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/bridge_matrix.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_timescale.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_cluster"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_sentinel"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_redis.get_single"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_influxdb.get_api_v2"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_influxdb.get_api_v1"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_hstreamdb.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_single"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_sharded"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mongodb.get_rs"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_pgsql.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mysql.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_kafka.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_gcp_pubsub.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_mqtt.get"
                    },
                    {
                        "$ref": "#/components/schemas/bridge_webhook.get"
                    }
                ]
            }
        },
        "/bridges/:id/:operation": {},
        "/bridges/:id/enable/:enable": {},
        "/bridges/:id/metrics": {
            "get": {
                "properties": {
                    "metrics": {
                        "description": "Bridge 计数",
                        "label": "Bridge 计数",
                        "$ref": "#/components/schemas/bridge.metrics"
                    },
                    "node_metrics": {
                        "description": "节点的计数器",
                        "items": {
                            "$ref": "#/components/schemas/bridge.node_metrics"
                        },
                        "label": "节点的计数器",
                        "type": "array"
                    }
                },
                "type": "object"
            }
        },
        "/bridges/:id/metrics/reset": {},
        "/bridges_probe": {},
        "/nodes/:node/bridges/:id/:operation": {}
    }
}