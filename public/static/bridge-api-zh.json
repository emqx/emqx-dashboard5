{
  "paths" : {
    "/nodes/:node/bridges/:id/:operation" : {
      
    },
    "/bridges_probe" : {
      
    },
    "/bridges/:id/metrics/reset" : {
      
    },
    "/bridges/:id/metrics" : {
      "get" : {
        "type" : "object",
        "properties" : {
          "metrics" : {
            "$ref" : "#/components/schemas/bridge.metrics",
            "summary" : "Bridge 计数",
            "label" : "Bridge 计数",
            "description" : "Bridge 计数"
          },
          "node_metrics" : {
            "type" : "array",
            "summary" : "节点的计数器",
            "label" : "节点的计数器",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_metrics"
            },
            "description" : "节点的计数器"
          }
        }
      }
    },
    "/bridges/:id/enable/:enable" : {
      
    },
    "/bridges/:id/:operation" : {
      
    },
    "/bridges/:id" : {
      "put" : {
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/bridge_sqlserver.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_cassa.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_rocketmq.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_dynamo.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_clickhouse.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_tdengine.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_matrix.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_timescale.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_cluster"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_sentinel"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_single"
          },
          {
            "$ref" : "#/components/schemas/bridge_influxdb.get_api_v2"
          },
          {
            "$ref" : "#/components/schemas/bridge_influxdb.get_api_v1"
          },
          {
            "$ref" : "#/components/schemas/bridge_hstreamdb.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_single"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_sharded"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_rs"
          },
          {
            "$ref" : "#/components/schemas/bridge_pgsql.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mysql.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_kafka.get_producer"
          },
          {
            "$ref" : "#/components/schemas/bridge_kafka.get_consumer"
          },
          {
            "$ref" : "#/components/schemas/bridge_gcp_pubsub.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mqtt.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_webhook.get"
          }
        ]
      },
      "get" : {
        "oneOf" : [
          {
            "$ref" : "#/components/schemas/bridge_sqlserver.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_cassa.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_rocketmq.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_dynamo.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_clickhouse.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_tdengine.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_matrix.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_timescale.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_cluster"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_sentinel"
          },
          {
            "$ref" : "#/components/schemas/bridge_redis.get_single"
          },
          {
            "$ref" : "#/components/schemas/bridge_influxdb.get_api_v2"
          },
          {
            "$ref" : "#/components/schemas/bridge_influxdb.get_api_v1"
          },
          {
            "$ref" : "#/components/schemas/bridge_hstreamdb.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_single"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_sharded"
          },
          {
            "$ref" : "#/components/schemas/bridge_mongodb.get_rs"
          },
          {
            "$ref" : "#/components/schemas/bridge_pgsql.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mysql.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_kafka.get_producer"
          },
          {
            "$ref" : "#/components/schemas/bridge_kafka.get_consumer"
          },
          {
            "$ref" : "#/components/schemas/bridge_gcp_pubsub.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_mqtt.get"
          },
          {
            "$ref" : "#/components/schemas/bridge_webhook.get"
          }
        ]
      }
    },
    "/bridges" : {
      "get" : {
        "type" : "array",
        "items" : {
          "oneOf" : [
            {
              "$ref" : "#/components/schemas/bridge_sqlserver.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_cassa.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_rocketmq.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_dynamo.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_clickhouse.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_tdengine.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_matrix.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_timescale.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_redis.get_cluster"
            },
            {
              "$ref" : "#/components/schemas/bridge_redis.get_sentinel"
            },
            {
              "$ref" : "#/components/schemas/bridge_redis.get_single"
            },
            {
              "$ref" : "#/components/schemas/bridge_influxdb.get_api_v2"
            },
            {
              "$ref" : "#/components/schemas/bridge_influxdb.get_api_v1"
            },
            {
              "$ref" : "#/components/schemas/bridge_hstreamdb.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_mongodb.get_single"
            },
            {
              "$ref" : "#/components/schemas/bridge_mongodb.get_sharded"
            },
            {
              "$ref" : "#/components/schemas/bridge_mongodb.get_rs"
            },
            {
              "$ref" : "#/components/schemas/bridge_pgsql.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_mysql.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_kafka.get_producer"
            },
            {
              "$ref" : "#/components/schemas/bridge_kafka.get_consumer"
            },
            {
              "$ref" : "#/components/schemas/bridge_gcp_pubsub.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_mqtt.get"
            },
            {
              "$ref" : "#/components/schemas/bridge_webhook.get"
            }
          ]
        }
      }
    }
  },
  "info" : {
    "version" : "0.1.0",
    "title" : "EMQX Data Bridge API Schema"
  },
  "components" : {
    "schemas" : {
      "bridge_cassa.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "cassandra"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "cql" : {
            "type" : "string",
            "summary" : "CQL 模板",
            "label" : "CQL 模板",
            "format" : "sql",
            "description" : "CQL 模板",
            "default" : "insert into mqtt_msg(topic, msgid, sender, qos, payload, arrived, retain) values (${topic}, ${id}, ${clientid}, ${qos}, ${payload}, ${timestamp}, ${flags.retain})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Cassandra。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "Servers",
            "label" : "Servers",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port][,Host2:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Cassandra 默认端口 9042。"
          },
          "keyspace" : {
            "type" : "string",
            "summary" : "Keyspace",
            "label" : "Keyspace",
            "description" : "要连接到的 Keyspace 名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "keyspace",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_redis.post_sentinel" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_sentinel",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "sentinel"
            ],
            "summary" : "哨兵模式",
            "label" : "哨兵模式",
            "description" : "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
            "default" : "sentinel"
          },
          "sentinel" : {
            "type" : "string",
            "summary" : "集群名称",
            "label" : "集群名称",
            "description" : "Redis 哨兵模式下的集群名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_sentinel"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          }
        },
        "required" : [
          "command_template",
          "name",
          "sentinel",
          "servers",
          "type"
        ]
      },
      "bridge_kafka.producer_buffer" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "type" : "enum",
            "symbols" : [
              "memory",
              "disk",
              "hybrid"
            ],
            "summary" : "缓存模式",
            "label" : "缓存模式",
            "description" : "消息缓存模式。<br/><code>memory</code>: 所有的消息都缓存在内存里。如果 EMQX 服务重启，缓存的消息会丢失。<br/><code>disk</code>: 缓存到磁盘上。EMQX 重启后会继续发送重启前未发送完成的消息。<br/><code>hybrid</code>: 先将消息缓存在内存中，当内存中的消息堆积超过一定限制（配置项 <code>segment_bytes</code> 描述了该限制）后，后续的消息会缓存到磁盘上。与 <code>memory</code> 模式一样，如果 EMQX 服务重启，缓存的消息会丢失。",
            "default" : "memory"
          },
          "per_partition_limit" : {
            "type" : "byteSize",
            "summary" : "Kafka 分区缓存上限",
            "label" : "Kafka 分区缓存上限",
            "description" : "为每个 Kafka 分区设置的最大缓存字节数。当超过这个上限之后，老的消息会被丢弃，为新的消息腾出空间。",
            "default" : "2GB"
          },
          "segment_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存文件大小",
            "label" : "缓存文件大小",
            "description" : "当缓存模式是 <code>disk</code> 或 <code>hybrid</code> 时适用。该配置用于指定缓存到磁盘上的文件的大小。",
            "default" : "100MB"
          },
          "memory_overload_protection" : {
            "type" : "boolean",
            "summary" : "内存过载保护",
            "label" : "内存过载保护",
            "description" : "缓存模式是 <code>memory</code> 或 <code>hybrid</code> 时适用。当系统处于高内存压力时，从队列中丢弃旧的消息以减缓内存增长。内存压力值由配置项 <code>sysmon.os.sysmem_high_watermark</code> 决定。注意，该配置仅在 Linux 系统中有效。",
            "default" : false
          }
        }
      },
      "bridge_tdengine.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "tdengine"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, ${id}, ${topic}, ${qos}, ${payload}, ${timestamp})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 TDengine。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 TDengine 默认端口 6041。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "password",
          "server",
          "type"
        ]
      },
      "bridge_influxdb.post_api_v1" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库",
            "label" : "数据库",
            "description" : "InfluxDB 数据库。"
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "InfluxDB 用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "InfluxDB 密码。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "influxdb_api_v1"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "type",
          "write_syntax"
        ]
      },
      "connector-mqtt.ingress" : {
        "type" : "object",
        "properties" : {
          "remote" : {
            "$ref" : "#/components/schemas/connector-mqtt.ingress_remote",
            "summary" : "远程配置",
            "label" : "远程配置",
            "description" : "订阅远程 Broker 相关的配置。"
          },
          "local" : {
            "$ref" : "#/components/schemas/connector-mqtt.ingress_local",
            "summary" : "本地配置",
            "label" : "本地配置",
            "description" : "发送消息到本地 Broker 相关的配置。"
          }
        }
      },
      "bridge_influxdb.get_api_v2" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "bucket" : {
            "type" : "string",
            "summary" : "Bucket",
            "label" : "Bucket",
            "description" : "InfluxDB bucket 名称。"
          },
          "org" : {
            "type" : "string",
            "summary" : "组织",
            "label" : "组织",
            "description" : "InfluxDB 组织名称。"
          },
          "token" : {
            "type" : "string",
            "summary" : "Token",
            "label" : "Token",
            "description" : "InfluxDB token。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "influxdb_api_v2"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          }
        },
        "required" : [
          "bucket",
          "name",
          "org",
          "token",
          "type",
          "write_syntax"
        ]
      },
      "connector-mqtt.egress_local" : {
        "type" : "object",
        "properties" : {
          "topic" : {
            "type" : "string",
            "summary" : "本地主题",
            "label" : "本地主题",
            "description" : "要转发到远程broker的本地主题"
          }
        }
      },
      "bridge_influxdb.put_api_v2" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "bucket" : {
            "type" : "string",
            "summary" : "Bucket",
            "label" : "Bucket",
            "description" : "InfluxDB bucket 名称。"
          },
          "org" : {
            "type" : "string",
            "summary" : "组织",
            "label" : "组织",
            "description" : "InfluxDB 组织名称。"
          },
          "token" : {
            "type" : "string",
            "summary" : "Token",
            "label" : "Token",
            "description" : "InfluxDB token。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "bucket",
          "org",
          "token",
          "write_syntax"
        ]
      },
      "bridge_redis.creation_opts_redis_single" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_mongodb.post_rs" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "rs"
            ],
            "summary" : "Replica set 模式",
            "label" : "Replica set 模式",
            "description" : "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
            "default" : "rs"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "r_mode" : {
            "type" : "enum",
            "symbols" : [
              "master",
              "slave_ok"
            ],
            "summary" : "读模式",
            "label" : "读模式",
            "description" : "读模式。",
            "default" : "master"
          },
          "replica_set_name" : {
            "type" : "string",
            "summary" : "副本集名称",
            "label" : "副本集名称",
            "description" : "副本集的名称。"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_rs"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "replica_set_name",
          "servers",
          "type"
        ]
      },
      "bridge_clickhouse.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_clickhouse.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "可以使用 ${field} 占位符来引用消息与客户端上下文中的变量，请确保对应字段存在且数据格式符合预期。此处不支持 [SQL 预处理](https://docs.emqx.com/zh/enterprise/v5.0/data-integration/data-bridges.html#sql-预处理)。",
            "default" : "INSERT INTO mqtt_test(payload, arrived) VALUES ('${payload}', ${timestamp})"
          },
          "batch_value_separator" : {
            "type" : "string",
            "summary" : "分隔符",
            "label" : "分隔符",
            "description" : "默认为逗号 ','，适用于 VALUE 格式。您也可以使用其他分隔符， 请参考 [INSERT INTO 语句](https://clickhouse.com/docs/en/sql-reference/statements/insert-into)。",
            "default" : ", "
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Clickhouse。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_clickhouse.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "url",
            "summary" : "服务器 URL",
            "label" : "服务器 URL",
            "description" : "你想连接到的Clickhouse服务器的HTTP URL（例如http://myhostname:8123）。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "url"
        ]
      },
      "bridge_mongodb.put_rs" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "rs"
            ],
            "summary" : "Replica set 模式",
            "label" : "Replica set 模式",
            "description" : "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
            "default" : "rs"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "r_mode" : {
            "type" : "enum",
            "symbols" : [
              "master",
              "slave_ok"
            ],
            "summary" : "读模式",
            "label" : "读模式",
            "description" : "读模式。",
            "default" : "master"
          },
          "replica_set_name" : {
            "type" : "string",
            "summary" : "副本集名称",
            "label" : "副本集名称",
            "description" : "副本集的名称。"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          }
        },
        "required" : [
          "database",
          "replica_set_name",
          "servers"
        ]
      },
      "bridge.metrics" : {
        "type" : "object",
        "properties" : {
          "dropped" : {
            "type" : "number",
            "summary" : "丢弃",
            "label" : "丢弃",
            "description" : "被丢弃的消息个数。"
          },
          "dropped.other" : {
            "type" : "number",
            "summary" : "其他丢弃",
            "label" : "其他丢弃",
            "description" : "因为其他原因被丢弃的消息个数。"
          },
          "dropped.queue_full" : {
            "type" : "number",
            "summary" : "队列已满被丢弃",
            "label" : "队列已满被丢弃",
            "description" : "因为队列已满被丢弃的消息个数。"
          },
          "dropped.resource_not_found" : {
            "type" : "number",
            "summary" : "资源不存在被丢弃",
            "label" : "资源不存在被丢弃",
            "description" : "因为资源不存在被丢弃的消息个数。"
          },
          "dropped.resource_stopped" : {
            "type" : "number",
            "summary" : "资源停用被丢弃",
            "label" : "资源停用被丢弃",
            "description" : "因为资源已停用被丢弃的消息个数。"
          },
          "matched" : {
            "type" : "number",
            "summary" : "匹配次数",
            "label" : "匹配次数",
            "description" : "Bridge 被匹配到（被请求）的次数。"
          },
          "queuing" : {
            "type" : "number",
            "summary" : "被缓存",
            "label" : "被缓存",
            "description" : "当前被缓存到磁盘队列的消息个数。"
          },
          "retried" : {
            "type" : "number",
            "summary" : "已重试",
            "label" : "已重试",
            "description" : "重试的次数。"
          },
          "failed" : {
            "type" : "number",
            "summary" : "发送失败",
            "label" : "发送失败",
            "description" : "发送失败的消息个数。"
          },
          "inflight" : {
            "type" : "number",
            "summary" : "已发送未确认",
            "label" : "已发送未确认",
            "description" : "已异步地发送但没有收到 ACK 的消息个数。"
          },
          "success" : {
            "type" : "number",
            "summary" : "发送成功",
            "label" : "发送成功",
            "description" : "已经发送成功的消息个数。"
          },
          "rate" : {
            "type" : "number",
            "summary" : "速率",
            "label" : "速率",
            "description" : "执行操作的速率，次/秒"
          },
          "rate_max" : {
            "type" : "number",
            "summary" : "执行操作的最大速率",
            "label" : "执行操作的最大速率",
            "description" : "执行操作的最大速率，次/秒"
          },
          "rate_last5m" : {
            "type" : "number",
            "summary" : "5 分钟平均速率",
            "label" : "5 分钟平均速率",
            "description" : "5 分钟平均速率，次/秒"
          },
          "received" : {
            "type" : "number",
            "summary" : "已接收",
            "label" : "已接收",
            "description" : "从远程系统收到的消息个数。"
          }
        }
      },
      "bridge_influxdb.get_api_v1" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库",
            "label" : "数据库",
            "description" : "InfluxDB 数据库。"
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "InfluxDB 用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "InfluxDB 密码。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "influxdb_api_v1"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          }
        },
        "required" : [
          "database",
          "name",
          "type",
          "write_syntax"
        ]
      },
      "bridge_mysql.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "connector-http.request" : {
        "type" : "object",
        "properties" : {
          "method" : {
            "type" : "string",
            "summary" : "HTTP 请求方法",
            "label" : "HTTP 请求方法",
            "description" : "HTTP 请求方法。"
          },
          "path" : {
            "type" : "string",
            "summary" : "HTTP请求路径",
            "label" : "HTTP请求路径",
            "description" : "HTTP请求路径。"
          },
          "body" : {
            "type" : "string",
            "summary" : "HTTP请求报文主体",
            "label" : "HTTP请求报文主体",
            "description" : "HTTP请求报文主体。"
          },
          "headers" : {
            "type" : "object",
            "summary" : "HTTP 头字段列表",
            "label" : "HTTP 头字段列表",
            "description" : "HTTP 头字段列表。"
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "最大重试次数",
            "minimum" : 1,
            "label" : "最大重试次数",
            "description" : "请求出错时的最大重试次数。"
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "HTTP 请求超时。"
          }
        }
      },
      "bridge_mongodb.post_sharded" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "sharded"
            ],
            "summary" : "Sharded cluster 模式",
            "label" : "Sharded cluster 模式",
            "description" : "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
            "default" : "sharded"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_sharded"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge.node_status" : {
        "type" : "object",
        "properties" : {
          "node" : {
            "type" : "string",
            "summary" : "节点名字",
            "label" : "节点名字",
            "example" : "emqx@127.0.0.1",
            "description" : "节点的名字"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "label" : "status",
            "description" : "status Description"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          }
        }
      },
      "bridge_hstreamdb.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "hstreamdb"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "桥接方向",
            "label" : "桥接方向",
            "description" : "桥接的方向， 必须是 egress",
            "default" : "egress"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。"
          },
          "payload" : {
            "type" : "string",
            "summary" : "消息内容",
            "label" : "消息内容",
            "description" : "要转发到 HStreamDB 的数据内容，支持占位符",
            "default" : "${payload}"
          },
          "connector" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/connector_hstreamdb.config"
              },
              {
                "type" : "string"
              }
            ],
            "summary" : "连接器通用配置。",
            "label" : "连接器通用配置。",
            "example" : "hstreamdb:demo",
            "description" : "连接器的通用配置。"
          }
        },
        "required" : [
          "connector",
          "name",
          "type"
        ]
      },
      "connector-mqtt.egress_remote" : {
        "type" : "object",
        "properties" : {
          "topic" : {
            "type" : "string",
            "summary" : "远程主题",
            "label" : "远程主题",
            "description" : "转发到远程broker的哪个topic。<br/><br/>允许使用带有变量的模板。"
          },
          "qos" : {
            "oneOf" : [
              {
                "type" : "string"
              },
              {
                "type" : "enum",
                "symbols" : [
                  0,
                  1,
                  2
                ]
              }
            ],
            "summary" : "远程 QoS",
            "label" : "远程 QoS",
            "description" : "待发送 MQTT 消息的 QoS。<br/><br/>允许使用带有变量的模板。",
            "default" : 1
          },
          "retain" : {
            "oneOf" : [
              {
                "type" : "string"
              },
              {
                "type" : "boolean"
              }
            ],
            "summary" : "保留消息标志",
            "label" : "保留消息标志",
            "description" : "要发送的 MQTT 消息的“保留”标志。<br/><br/>允许使用带有变量的模板。",
            "default" : false
          },
          "payload" : {
            "type" : "string",
            "summary" : "消息负载",
            "label" : "消息负载",
            "description" : "要发送的 MQTT 消息的负载。<br/><br/>允许使用带有变量的模板。"
          }
        },
        "required" : [
          "topic"
        ]
      },
      "bridge_redis.get_sentinel" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_sentinel",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "sentinel"
            ],
            "summary" : "哨兵模式",
            "label" : "哨兵模式",
            "description" : "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
            "default" : "sentinel"
          },
          "sentinel" : {
            "type" : "string",
            "summary" : "集群名称",
            "label" : "集群名称",
            "description" : "Redis 哨兵模式下的集群名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_sentinel"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          }
        },
        "required" : [
          "command_template",
          "name",
          "sentinel",
          "servers",
          "type"
        ]
      },
      "bridge.node_metrics" : {
        "type" : "object",
        "properties" : {
          "node" : {
            "type" : "string",
            "summary" : "节点名字",
            "label" : "节点名字",
            "example" : "emqx@127.0.0.1",
            "description" : "节点的名字"
          },
          "metrics" : {
            "$ref" : "#/components/schemas/bridge.metrics",
            "label" : "metrics",
            "description" : "metrics Description"
          }
        }
      },
      "bridge_sqlserver.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "sqlserver"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )"
          },
          "driver" : {
            "type" : "string",
            "summary" : "SQL Server Driver 名称",
            "label" : "SQL Server Driver 名称",
            "description" : "SQL Server Driver 名称",
            "default" : "ms-sql"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Microsoft SQL Server。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_sqlserver.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 SQL Server 默认端口 1433。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "sa"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_mqtt.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_kafka.auth_username_password" : {
        "type" : "object",
        "properties" : {
          "mechanism" : {
            "type" : "enum",
            "symbols" : [
              "plain",
              "scram_sha_256",
              "scram_sha_512"
            ],
            "summary" : "认证方法",
            "label" : "认证方法",
            "description" : "SASL 认证方法名称。"
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "SASL 认证的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "description" : "SASL 认证的密码。"
          }
        },
        "required" : [
          "mechanism",
          "password",
          "username"
        ]
      },
      "bridge_dynamo.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "dynamo"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息存入数据库",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 DynamoDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_dynamo.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "DynamoDB 地址",
            "label" : "DynamoDB 地址",
            "description" : "DynamoDB 的地址。"
          },
          "table" : {
            "type" : "string",
            "summary" : "表",
            "label" : "表",
            "description" : "DynamoDB 的表。"
          },
          "aws_access_key_id" : {
            "type" : "string",
            "summary" : "连接访问 ID",
            "label" : "连接访问 ID",
            "description" : "DynamoDB 的访问 ID。"
          },
          "aws_secret_access_key" : {
            "type" : "string",
            "summary" : "连接访问密钥",
            "label" : "连接访问密钥",
            "description" : "DynamoDB 的访问密钥。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "aws_access_key_id",
          "aws_secret_access_key",
          "name",
          "table",
          "type",
          "url"
        ]
      },
      "bridge_matrix.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "matrix"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_influxdb.put_api_v1" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库",
            "label" : "数据库",
            "description" : "InfluxDB 数据库。"
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "InfluxDB 用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "InfluxDB 密码。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "write_syntax"
        ]
      },
      "bridge_pgsql.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "bridge_pgsql.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "pgsql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_gcp_pubsub.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接 HTTP 服务器的超时时间。",
            "default" : "15s"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "pipelining" : {
            "type" : "string",
            "summary" : "HTTP 流水线",
            "label" : "HTTP 流水线",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "最大重试次数",
            "minimum" : 1,
            "label" : "最大重试次数",
            "description" : "请求出错时的最大重试次数。",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "废弃的。在缓冲区设置中配置请求超时。",
            "deprecated" : true,
            "default" : "15s"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "HTTP 请求消息体模板",
            "label" : "HTTP 请求消息体模板",
            "description" : "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。"
          },
          "pubsub_topic" : {
            "type" : "string",
            "summary" : "GCP PubSub 主题",
            "label" : "GCP PubSub 主题",
            "description" : "要发布消息的GCP PubSub主题。"
          },
          "service_account_json" : {
            "type" : "string",
            "summary" : "GCP 服务账户凭证",
            "label" : "GCP 服务账户凭证",
            "description" : "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。"
          }
        },
        "required" : [
          "pubsub_topic",
          "service_account_json"
        ]
      },
      "bridge_hstreamdb.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "桥接方向",
            "label" : "桥接方向",
            "description" : "桥接的方向， 必须是 egress",
            "default" : "egress"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。"
          },
          "payload" : {
            "type" : "string",
            "summary" : "消息内容",
            "label" : "消息内容",
            "description" : "要转发到 HStreamDB 的数据内容，支持占位符",
            "default" : "${payload}"
          },
          "connector" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/connector_hstreamdb.config"
              },
              {
                "type" : "string"
              }
            ],
            "summary" : "连接器通用配置。",
            "label" : "连接器通用配置。",
            "example" : "hstreamdb:demo",
            "description" : "连接器的通用配置。"
          }
        },
        "required" : [
          "connector"
        ]
      },
      "bridge_mongodb.get_sharded" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "sharded"
            ],
            "summary" : "Sharded cluster 模式",
            "label" : "Sharded cluster 模式",
            "description" : "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
            "default" : "sharded"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_sharded"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_mongodb.post_single" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "Standalone 模式",
            "label" : "Standalone 模式",
            "description" : "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_single"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_cassa.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "cql" : {
            "type" : "string",
            "summary" : "CQL 模板",
            "label" : "CQL 模板",
            "format" : "sql",
            "description" : "CQL 模板",
            "default" : "insert into mqtt_msg(topic, msgid, sender, qos, payload, arrived, retain) values (${topic}, ${id}, ${clientid}, ${qos}, ${payload}, ${timestamp}, ${flags.retain})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Cassandra。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "Servers",
            "label" : "Servers",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port][,Host2:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Cassandra 默认端口 9042。"
          },
          "keyspace" : {
            "type" : "string",
            "summary" : "Keyspace",
            "label" : "Keyspace",
            "description" : "要连接到的 Keyspace 名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "keyspace",
          "servers"
        ]
      },
      "connector-mqtt.egress" : {
        "type" : "object",
        "properties" : {
          "local" : {
            "$ref" : "#/components/schemas/connector-mqtt.egress_local",
            "summary" : "本地配置",
            "label" : "本地配置",
            "description" : "如何从本地 Broker 接收消息相关的配置。"
          },
          "remote" : {
            "$ref" : "#/components/schemas/connector-mqtt.egress_remote",
            "summary" : "远程配置",
            "label" : "远程配置",
            "description" : "发送消息到远程 Broker 相关的配置。"
          }
        },
        "required" : [
          "remote"
        ]
      },
      "bridge_kafka.post_consumer" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "kafka_consumer",
              "kafka"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.consumer_kafka_opts",
            "summary" : "Kafka 消费者",
            "label" : "Kafka 消费者",
            "description" : "Kafka消费者配置。"
          },
          "topic_mapping" : {
            "type" : "array",
            "summary" : "主题映射关系",
            "label" : "主题映射关系",
            "items" : {
              "$ref" : "#/components/schemas/bridge_kafka.consumer_topic_mapping"
            },
            "description" : "指定 Kafka 主题和 MQTT 主题之间的映射关系。 应至少包含一项。"
          },
          "key_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Key 编码模式",
            "label" : "Key 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Key。<code>none</code> 使用 Kafka 消息中的 Key 原始值，不进行编码。  注意：在这种情况下，Key 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的密钥或值使用 base-64 编码。",
            "default" : "none"
          },
          "value_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Value 编码模式",
            "label" : "Value 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Value。<code>none</code> 使用 Kafka 消息中的 Value 原始值，不进行编码。  注意：在这种情况下，Value 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的 Value 使用 base-64 编码。",
            "default" : "none"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "name",
          "topic_mapping",
          "type"
        ]
      },
      "bridge_dynamo.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "dynamo"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息存入数据库",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 DynamoDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_dynamo.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "DynamoDB 地址",
            "label" : "DynamoDB 地址",
            "description" : "DynamoDB 的地址。"
          },
          "table" : {
            "type" : "string",
            "summary" : "表",
            "label" : "表",
            "description" : "DynamoDB 的表。"
          },
          "aws_access_key_id" : {
            "type" : "string",
            "summary" : "连接访问 ID",
            "label" : "连接访问 ID",
            "description" : "DynamoDB 的访问 ID。"
          },
          "aws_secret_access_key" : {
            "type" : "string",
            "summary" : "连接访问密钥",
            "label" : "连接访问密钥",
            "description" : "DynamoDB 的访问密钥。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "aws_access_key_id",
          "aws_secret_access_key",
          "name",
          "table",
          "type",
          "url"
        ]
      },
      "bridge_clickhouse.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "clickhouse"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "可以使用 ${field} 占位符来引用消息与客户端上下文中的变量，请确保对应字段存在且数据格式符合预期。此处不支持 [SQL 预处理](https://docs.emqx.com/zh/enterprise/v5.0/data-integration/data-bridges.html#sql-预处理)。",
            "default" : "INSERT INTO mqtt_test(payload, arrived) VALUES ('${payload}', ${timestamp})"
          },
          "batch_value_separator" : {
            "type" : "string",
            "summary" : "分隔符",
            "label" : "分隔符",
            "description" : "默认为逗号 ','，适用于 VALUE 格式。您也可以使用其他分隔符， 请参考 [INSERT INTO 语句](https://clickhouse.com/docs/en/sql-reference/statements/insert-into)。",
            "default" : ", "
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Clickhouse。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_clickhouse.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "url",
            "summary" : "服务器 URL",
            "label" : "服务器 URL",
            "description" : "你想连接到的Clickhouse服务器的HTTP URL（例如http://myhostname:8123）。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "type",
          "url"
        ]
      },
      "bridge_matrix.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "bridge_mongodb.get_rs" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "rs"
            ],
            "summary" : "Replica set 模式",
            "label" : "Replica set 模式",
            "description" : "Replica set模式。当 MongoDB 服务运行在 replica-set 模式下，该配置必须设置为 'rs'。",
            "default" : "rs"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "r_mode" : {
            "type" : "enum",
            "symbols" : [
              "master",
              "slave_ok"
            ],
            "summary" : "读模式",
            "label" : "读模式",
            "description" : "读模式。",
            "default" : "master"
          },
          "replica_set_name" : {
            "type" : "string",
            "summary" : "副本集名称",
            "label" : "副本集名称",
            "description" : "副本集的名称。"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_rs"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "replica_set_name",
          "servers",
          "type"
        ]
      },
      "bridge_kafka.put_consumer" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.consumer_kafka_opts",
            "summary" : "Kafka 消费者",
            "label" : "Kafka 消费者",
            "description" : "Kafka消费者配置。"
          },
          "topic_mapping" : {
            "type" : "array",
            "summary" : "主题映射关系",
            "label" : "主题映射关系",
            "items" : {
              "$ref" : "#/components/schemas/bridge_kafka.consumer_topic_mapping"
            },
            "description" : "指定 Kafka 主题和 MQTT 主题之间的映射关系。 应至少包含一项。"
          },
          "key_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Key 编码模式",
            "label" : "Key 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Key。<code>none</code> 使用 Kafka 消息中的 Key 原始值，不进行编码。  注意：在这种情况下，Key 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的密钥或值使用 base-64 编码。",
            "default" : "none"
          },
          "value_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Value 编码模式",
            "label" : "Value 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Value。<code>none</code> 使用 Kafka 消息中的 Value 原始值，不进行编码。  注意：在这种情况下，Value 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的 Value 使用 base-64 编码。",
            "default" : "none"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "topic_mapping"
        ]
      },
      "bridge_mongodb.put_single" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "Standalone 模式",
            "label" : "Standalone 模式",
            "description" : "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "bridge_webhook.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "webhook"
            ],
            "summary" : "Bridge 类型",
            "label" : "Bridge 类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "Bridge 名字",
            "label" : "Bridge 名字",
            "description" : "Bridge 名字，Bridge 的可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_webhook.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "retry_interval" : {
            "type" : "duration",
            "label" : "retry_interval",
            "description" : "retry_interval Description",
            "deprecated" : true
          },
          "pool_type" : {
            "type" : "enum",
            "symbols" : [
              "random",
              "hash"
            ],
            "summary" : "连接池类型",
            "label" : "连接池类型",
            "description" : "连接池的类型，可用类型有`random`, `hash`。",
            "default" : "random"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "enable_pipelining" : {
            "type" : "string",
            "summary" : "HTTP 管道",
            "label" : "HTTP 管道",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "request" : {
            "$ref" : "#/components/schemas/connector-http.request",
            "summary" : "HTTP 请求",
            "label" : "HTTP 请求",
            "description" : "设置 HTTP 请求的参数。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "HTTP Bridge",
            "label" : "HTTP Bridge",
            "description" : "HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。"
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "Bridge 方向",
            "label" : "Bridge 方向",
            "description" : "已废弃，Bridge 的方向，必须是 egress",
            "deprecated" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。"
          },
          "method" : {
            "type" : "enum",
            "symbols" : [
              "post",
              "put",
              "get",
              "delete"
            ],
            "summary" : "HTTP 请求方法",
            "label" : "HTTP 请求方法",
            "description" : "HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。",
            "default" : "post"
          },
          "headers" : {
            "type" : "object",
            "summary" : "HTTP 请求标头",
            "label" : "HTTP 请求标头",
            "description" : "HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。",
            "default" : {
              "keep-alive" : "timeout=5",
              "content-type" : "application/json",
              "connection" : "keep-alive",
              "cache-control" : "no-cache",
              "accept" : "application/json"
            }
          },
          "body" : {
            "type" : "string",
            "summary" : "HTTP 请求正文",
            "label" : "HTTP 请求正文",
            "description" : "HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。"
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "HTTP 请求重试次数",
            "minimum" : 1,
            "label" : "HTTP 请求重试次数",
            "description" : "HTTP 请求失败最大重试次数",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "HTTP 请求超时",
            "default" : "15s"
          }
        },
        "required" : [
          "name",
          "type",
          "url"
        ]
      },
      "bridge_redis.put_cluster" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_cluster",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "cluster"
            ],
            "summary" : "集群模式",
            "label" : "集群模式",
            "description" : "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
            "default" : "cluster"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "command_template",
          "servers"
        ]
      },
      "bridge_rocketmq.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "rocketmq"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息转发给 RocketMQ。 <br><br/>            模板可以是任意带有占位符的合法字符串, 例如:<br><br/>            - ${id}, ${username}, ${clientid}, ${timestamp}<br><br/>            - {\"id\" : ${id}, \"username\" : ${username}}",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 RocketMQ。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 RocketMQ 默认端口 9876。"
          },
          "topic" : {
            "type" : "string",
            "summary" : "RocketMQ 主题",
            "label" : "RocketMQ 主题",
            "description" : "RocketMQ 主题",
            "default" : "TopicTest"
          },
          "access_key" : {
            "type" : "string",
            "summary" : "AccessKey",
            "label" : "AccessKey",
            "description" : "RocketMQ 服务器的 `accessKey`。",
            "default" : ""
          },
          "secret_key" : {
            "type" : "string",
            "summary" : "SecretKey",
            "label" : "SecretKey",
            "description" : "RocketMQ 服务器的 `secretKey`。",
            "default" : ""
          },
          "security_token" : {
            "type" : "string",
            "summary" : "安全令牌",
            "label" : "安全令牌",
            "description" : "RocketMQ 服务器安全令牌",
            "default" : ""
          },
          "sync_timeout" : {
            "type" : "duration",
            "summary" : "同步调用超时时间",
            "label" : "同步调用超时时间",
            "description" : "RocketMQ 驱动同步调用的超时时间。",
            "default" : "3s"
          },
          "refresh_interval" : {
            "type" : "duration",
            "summary" : "主题路由更新间隔",
            "label" : "主题路由更新间隔",
            "description" : "RocketMQ 主题路由更新间隔。",
            "default" : "3s"
          },
          "send_buffer" : {
            "type" : "byteSize",
            "summary" : "发送消息的缓冲区大小",
            "label" : "发送消息的缓冲区大小",
            "description" : "RocketMQ 驱动的套字节发送消息的缓冲区大小",
            "default" : "1024KB"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_clickhouse.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "clickhouse"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "可以使用 ${field} 占位符来引用消息与客户端上下文中的变量，请确保对应字段存在且数据格式符合预期。此处不支持 [SQL 预处理](https://docs.emqx.com/zh/enterprise/v5.0/data-integration/data-bridges.html#sql-预处理)。",
            "default" : "INSERT INTO mqtt_test(payload, arrived) VALUES ('${payload}', ${timestamp})"
          },
          "batch_value_separator" : {
            "type" : "string",
            "summary" : "分隔符",
            "label" : "分隔符",
            "description" : "默认为逗号 ','，适用于 VALUE 格式。您也可以使用其他分隔符， 请参考 [INSERT INTO 语句](https://clickhouse.com/docs/en/sql-reference/statements/insert-into)。",
            "default" : ", "
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Clickhouse。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_clickhouse.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "url",
            "summary" : "服务器 URL",
            "label" : "服务器 URL",
            "description" : "你想连接到的Clickhouse服务器的HTTP URL（例如http://myhostname:8123）。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "type",
          "url"
        ]
      },
      "bridge_kafka.consumer_topic_mapping" : {
        "type" : "object",
        "properties" : {
          "kafka_topic" : {
            "type" : "string",
            "summary" : "Kafka 主题",
            "label" : "Kafka 主题",
            "description" : "指定从哪个 Kafka 主题消费消息。"
          },
          "mqtt_topic" : {
            "type" : "string",
            "summary" : "MQTT主题",
            "label" : "MQTT主题",
            "description" : "设置 Kafka 消息向哪个本地 MQTT 主题转发消息。"
          },
          "qos" : {
            "type" : "enum",
            "symbols" : [
              0,
              1,
              2
            ],
            "summary" : "QoS",
            "label" : "QoS",
            "description" : "转发 MQTT 消息时使用的 QoS。",
            "default" : 0
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "MQTT Payload Template",
            "label" : "MQTT Payload Template",
            "description" : "用于转换收到的 Kafka 消息的模板。 默认情况下，它将使用 JSON 格式来序列化来自 Kafka 的所有字段。 这些字段包括：<code>headers</code>：一个包含字符串键值对的 JSON 对象。<br/><code>key</code>：Kafka 消息的键（使用选择的编码方式编码）。<br/><code>offset</code>：消息的偏移量。<br/><code>topic</code>：Kafka 主题。<br/><code>ts</code>: 消息的时间戳。<br/><code>ts_type</code>：消息的时间戳类型，值可能是： <code>create</code>， <code>append</code> 或 <code>undefined</code>。<br/><code>value</code>: Kafka 消息值（使用选择的编码方式编码）。",
            "default" : "${.}"
          }
        },
        "required" : [
          "kafka_topic",
          "mqtt_topic"
        ]
      },
      "bridge_influxdb.post_api_v2" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 InfluxDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 InfluxDB。"
          },
          "write_syntax" : {
            "type" : "string",
            "summary" : "写语句",
            "label" : "写语句",
            "format" : "sql",
            "description" : "使用 InfluxDB API Line Protocol 写入 InfluxDB 的数据，支持占位符</br><br/>参考 [InfluxDB 2.3 Line Protocol](https://docs.influxdata.com/influxdb/v2.3/reference/syntax/line-protocol/) 及<br/>[InfluxDB 1.8 Line Protocol](https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/) </br><br/>TLDR: </br><br/>```<br/><measurement>[,<tag_key>=<tag_value>[,<tag_key>=<tag_value>]] <field_key>=<field_value>[,<field_key>=<field_value>] [<timestamp>]<br/>```<br/>注意，整形数值占位符后需要添加一个字符 `i` 类型标识。例如 `${payload.int_value}i`"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。</br><br/>主机名具有以下形式：`Host[:Port]`。</br><br/>如果未指定 `[:Port]`，则使用 InfluxDB 默认端口 8086。",
            "default" : "127.0.0.1:8086"
          },
          "precision" : {
            "type" : "enum",
            "symbols" : [
              "ns",
              "us",
              "ms",
              "s"
            ],
            "summary" : "时间精度",
            "label" : "时间精度",
            "description" : "InfluxDB 时间精度。",
            "default" : "ms"
          },
          "bucket" : {
            "type" : "string",
            "summary" : "Bucket",
            "label" : "Bucket",
            "description" : "InfluxDB bucket 名称。"
          },
          "org" : {
            "type" : "string",
            "summary" : "组织",
            "label" : "组织",
            "description" : "InfluxDB 组织名称。"
          },
          "token" : {
            "type" : "string",
            "summary" : "Token",
            "label" : "Token",
            "description" : "InfluxDB token。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "influxdb_api_v2"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "bucket",
          "name",
          "org",
          "token",
          "type",
          "write_syntax"
        ]
      },
      "emqx_connector_mongo.topology" : {
        "type" : "object",
        "properties" : {
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "max_overflow" : {
            "type" : "number",
            "summary" : "最大溢出",
            "minimum" : 1,
            "label" : "最大溢出",
            "description" : "最大溢出。",
            "default" : 0
          },
          "overflow_ttl" : {
            "type" : "duration",
            "summary" : "溢出TTL",
            "label" : "溢出TTL",
            "description" : "当池内工人太多时，等待多久清除多余工人。"
          },
          "overflow_check_period" : {
            "type" : "duration",
            "summary" : "溢出检查周期",
            "label" : "溢出检查周期",
            "description" : "检查是否有超过配置的工人的周期（\"溢出\"）。"
          },
          "local_threshold_ms" : {
            "type" : "duration",
            "summary" : "本地阈值",
            "label" : "本地阈值",
            "description" : "在多个合适的MongoDB实例中进行选择的延迟窗口的大小。"
          },
          "connect_timeout_ms" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "超时重连的等待时间。"
          },
          "socket_timeout_ms" : {
            "type" : "duration",
            "summary" : "套接字操作超时",
            "label" : "套接字操作超时",
            "description" : "在尝试超时之前，在套接字上尝试发送或接收的持续时间。"
          },
          "server_selection_timeout_ms" : {
            "type" : "duration",
            "summary" : "服务器选择超时",
            "label" : "服务器选择超时",
            "description" : "指定在抛出异常之前为服务器选择阻断多长时间。"
          },
          "wait_queue_timeout_ms" : {
            "type" : "duration",
            "summary" : "等待队列超时",
            "label" : "等待队列超时",
            "description" : "工作者等待连接可用的最长时间。"
          },
          "heartbeat_frequency_ms" : {
            "type" : "duration",
            "summary" : "心跳期",
            "label" : "心跳期",
            "description" : "控制驱动程序何时检查MongoDB部署的状态。指定检查的间隔时间，从上一次检查结束到下一次检查开始计算。如果连接数增加（例如，如果你增加池子的大小，就会发生这种情况），你可能也需要增加这个周期，以避免在MongoDB日志文件中创建太多的日志条目。",
            "default" : "200s"
          },
          "min_heartbeat_frequency_ms" : {
            "type" : "duration",
            "summary" : "最小心跳周期",
            "label" : "最小心跳周期",
            "description" : "心跳间的最小间隙"
          }
        }
      },
      "bridge_kafka.post_producer" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "kafka_consumer",
              "kafka"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "源 MQTT 主题",
            "label" : "源 MQTT 主题",
            "description" : "MQTT 主题数据源由桥接指定，或留空由规则动作指定。"
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.producer_kafka_opts",
            "summary" : "生产者参数",
            "label" : "生产者参数",
            "description" : "Kafka 生产者参数。"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "kafka",
          "name",
          "type"
        ]
      },
      "bridge_kafka.get_producer" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "kafka_consumer",
              "kafka"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "源 MQTT 主题",
            "label" : "源 MQTT 主题",
            "description" : "MQTT 主题数据源由桥接指定，或留空由规则动作指定。"
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.producer_kafka_opts",
            "summary" : "生产者参数",
            "label" : "生产者参数",
            "description" : "Kafka 生产者参数。"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "kafka",
          "name",
          "type"
        ]
      },
      "bridge_gcp_pubsub.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "gcp_pubsub"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接 HTTP 服务器的超时时间。",
            "default" : "15s"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "pipelining" : {
            "type" : "string",
            "summary" : "HTTP 流水线",
            "label" : "HTTP 流水线",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "最大重试次数",
            "minimum" : 1,
            "label" : "最大重试次数",
            "description" : "请求出错时的最大重试次数。",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "废弃的。在缓冲区设置中配置请求超时。",
            "deprecated" : true,
            "default" : "15s"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "HTTP 请求消息体模板",
            "label" : "HTTP 请求消息体模板",
            "description" : "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。"
          },
          "pubsub_topic" : {
            "type" : "string",
            "summary" : "GCP PubSub 主题",
            "label" : "GCP PubSub 主题",
            "description" : "要发布消息的GCP PubSub主题。"
          },
          "service_account_json" : {
            "type" : "string",
            "summary" : "GCP 服务账户凭证",
            "label" : "GCP 服务账户凭证",
            "description" : "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。"
          }
        },
        "required" : [
          "name",
          "pubsub_topic",
          "service_account_json",
          "type"
        ]
      },
      "bridge_redis.creation_opts_redis_cluster" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "connector-mqtt.ingress_remote" : {
        "type" : "object",
        "properties" : {
          "topic" : {
            "type" : "string",
            "summary" : "远程主题",
            "label" : "远程主题",
            "description" : "从远程broker的哪个topic接收消息"
          },
          "qos" : {
            "type" : "enum",
            "symbols" : [
              0,
              1,
              2
            ],
            "summary" : "远程 QoS",
            "label" : "远程 QoS",
            "description" : "订阅远程borker时要使用的 QoS 级别",
            "default" : 1
          }
        },
        "required" : [
          "topic"
        ]
      },
      "broker.ssl_client_opts" : {
        "type" : "object",
        "properties" : {
          "cacertfile" : {
            "type" : "string",
            "summary" : "CA 证书文件",
            "label" : "CA 证书文件",
            "description" : "受信任的PEM格式 CA  证书捆绑文件<br/><br/>此文件中的证书用于验证TLS对等方的证书。<br/>如果要信任新 CA，请将新证书附加到文件中。<br/>无需重启EMQX即可加载更新的文件，因为系统会定期检查文件是否已更新（并重新加载）<br/><br/>注意：从文件中失效（删除）证书不会影响已建立的连接。"
          },
          "certfile" : {
            "type" : "string",
            "summary" : "证书文件",
            "label" : "证书文件",
            "description" : "PEM格式证书链文件<br/><br/>此文件中的证书应与证书颁发链的顺序相反。也就是说，主机的证书应该放在文件的开头，<br/>然后是直接颁发者 CA 证书，依此类推，一直到根 CA 证书。<br/>根 CA 证书是可选的，如果想要添加，应加到文件到最末端。"
          },
          "keyfile" : {
            "type" : "string",
            "summary" : "私钥文件",
            "label" : "私钥文件",
            "description" : "PEM格式的私钥文件。"
          },
          "verify" : {
            "type" : "enum",
            "symbols" : [
              "verify_peer",
              "verify_none"
            ],
            "summary" : "对等验证",
            "label" : "对等验证",
            "description" : "启用或禁用对等验证。",
            "default" : "verify_none"
          },
          "reuse_sessions" : {
            "type" : "boolean",
            "summary" : "TLS 会话重用",
            "label" : "TLS 会话重用",
            "description" : "启用 TLS 会话重用。",
            "default" : true
          },
          "depth" : {
            "type" : "number",
            "summary" : "CA 证书深度",
            "label" : "CA 证书深度",
            "description" : "在有效的证书路径中，可以跟随对等证书的非自颁发中间证书的最大数量。<br/>因此，如果深度为0，则对等方必须由受信任的根 CA 直接签名；<br/><br/>如果是1，路径可以是 PEER、中间 CA、ROOT-CA；<br/><br/>如果是2，则路径可以是PEER、中间 CA1、中间 CA2、ROOT-CA。",
            "default" : 10
          },
          "password" : {
            "type" : "string",
            "summary" : "秘钥文件密码",
            "label" : "秘钥文件密码",
            "format" : "password",
            "example" : "",
            "description" : "包含用户密码的字符串。仅在私钥文件受密码保护时使用。"
          },
          "versions" : {
            "type" : "array",
            "summary" : "SSL 版本",
            "label" : "SSL 版本",
            "items" : {
              "type" : "string"
            },
            "description" : "支持所有TLS/DTLS版本<br/><br/>注：PSK 的 Ciphers 无法在 <code>tlsv1.3</code> 中使用，如果打算使用 PSK 密码套件，请确保这里配置为 <code>[\"tlsv1.2\",\"tlsv1.1\"]</code>。",
            "default" : [
              "tlsv1.3",
              "tlsv1.2",
              "tlsv1.1",
              "tlsv1"
            ]
          },
          "ciphers" : {
            "type" : "array",
            "summary" : "",
            "label" : "",
            "items" : {
              "type" : "string"
            },
            "description" : "此配置保存由逗号分隔的 TLS 密码套件名称，或作为字符串数组。例如<br/><code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code>或<br/><code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code>。<br/><br/><br/>密码（及其顺序）定义了客户端和服务器通过网络连接加密信息的方式。<br/>选择一个好的密码套件对于应用程序的数据安全性、机密性和性能至关重要。<br/><br/>名称应为 OpenSSL 字符串格式（而不是 RFC 格式）。<br/>EMQX 配置文档提供的所有默认值和示例都是 OpenSSL 格式<br/><br/>注意：某些密码套件仅与特定的 TLS <code>版本</code>兼容（'tlsv1.1'、'tlsv1.2'或'tlsv1.3'）。<br/>不兼容的密码套件将被自动删除。<br/><br/>例如，如果只有 <code>versions</code> 仅配置为 <code>tlsv1.3</code>。为其他版本配置密码套件将无效。<br/><br/><br/><br/>注：PSK 的 Ciphers 不支持 tlsv1.3<br/><br/>如果打算使用PSK密码套件 <code>tlsv1.3</code>。应在<code>ssl.versions</code>中禁用。<br/><br/><br/><br/>PSK 密码套件：<br/><code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,<br/>RSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,<br/>RSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,<br/>RSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code>",
            "default" : ""
          },
          "secure_renegotiate" : {
            "type" : "boolean",
            "summary" : "SSL 重新协商",
            "label" : "SSL 重新协商",
            "description" : "SSL 参数重新协商是一种允许客户端和服务器动态重新协商 SSL 连接参数的功能。<br/>RFC 5746 定义了一种更安全的方法。通过启用安全的重新协商，您就失去了对不安全的重新协商的支持，从而容易受到 MitM 攻击。",
            "default" : true
          },
          "hibernate_after" : {
            "type" : "duration",
            "summary" : "闲置多久后休眠",
            "label" : "闲置多久后休眠",
            "description" : "在闲置一定时间后休眠 SSL 进程，减少其内存占用。",
            "default" : "5s"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用 TLS",
            "label" : "启用 TLS",
            "description" : "启用 TLS。",
            "default" : false
          },
          "server_name_indication" : {
            "oneOf" : [
              {
                "type" : "string"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "disable"
                ]
              }
            ],
            "summary" : "服务器名称指示",
            "label" : "服务器名称指示",
            "example" : "disable",
            "description" : "指定要在 TLS 服务器名称指示扩展中使用的主机名。<br/><br/>例如，当连接到 \"server.example.net\" 时，接受连接并执行 TLS 握手的真正服务器可能与 TLS 客户端最初连接到的主机不同，<br/>例如，当连接到 IP 地址时，或者当主机具有多个可解析的 DNS 记录时<br/><br/>如果未指定，它将默认为使用的主机名字符串<br/>建立连接，除非使用 IP 地址<br/><br/>然后，主机名也用于对等机的主机名验证证书<br/><br/>特殊值 <code>disable</code> 阻止发送服务器名称指示扩展，并禁用主机名验证检查。"
          }
        }
      },
      "bridge_redis.get_single" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_single",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "单机模式",
            "label" : "单机模式",
            "description" : "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_single"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          }
        },
        "required" : [
          "command_template",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_webhook.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_redis.get_cluster" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_cluster",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "cluster"
            ],
            "summary" : "集群模式",
            "label" : "集群模式",
            "description" : "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
            "default" : "cluster"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_cluster"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          }
        },
        "required" : [
          "command_template",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_timescale.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "pgsql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_dynamo.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_mysql.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mysql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_redis.post_cluster" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_cluster",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "cluster"
            ],
            "summary" : "集群模式",
            "label" : "集群模式",
            "description" : "集群模式。当 Redis 服务运行在集群模式下，该配置必须设置为 'cluster'。",
            "default" : "cluster"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_cluster"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          }
        },
        "required" : [
          "command_template",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_mqtt.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_mqtt.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "mode" : {
            "type" : "enum",
            "symbols" : [
              "cluster_shareload"
            ],
            "summary" : "MQTT 桥接模式",
            "label" : "MQTT 桥接模式",
            "description" : "MQTT 桥的模式。 <br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。",
            "default" : "cluster_shareload"
          },
          "server" : {
            "type" : "string",
            "summary" : "Broker主机和端口",
            "label" : "Broker主机和端口",
            "description" : "远程 MQTT Broker的主机和端口。"
          },
          "clientid_prefix" : {
            "type" : "string",
            "summary" : "客户ID前缀",
            "label" : "客户ID前缀",
            "description" : "可选的前缀，用于在出口网桥使用的clientid前加上前缀。"
          },
          "reconnect_interval" : {
            "type" : "string",
            "label" : "reconnect_interval",
            "description" : "reconnect_interval Description",
            "deprecated" : true
          },
          "proto_ver" : {
            "type" : "enum",
            "symbols" : [
              "v3",
              "v4",
              "v5"
            ],
            "summary" : "协议版本",
            "label" : "协议版本",
            "description" : "MQTT 协议版本",
            "default" : "v4"
          },
          "bridge_mode" : {
            "type" : "boolean",
            "summary" : "Bridge 模式",
            "label" : "Bridge 模式",
            "description" : "是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>如果设置为 true ，桥接会告诉远端服务器当前连接是一个桥接而不是一个普通的客户端。<br/>这意味着消息回环检测会更加高效，并且远端服务器收到的保留消息的标志位会透传给本地。",
            "default" : false
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "MQTT 协议的用户名"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "MQTT 协议的密码"
          },
          "clean_start" : {
            "type" : "boolean",
            "summary" : "清除会话",
            "label" : "清除会话",
            "description" : "与 ingress MQTT 桥的远程服务器重连时是否清除老的 MQTT 会话。",
            "default" : true
          },
          "keepalive" : {
            "type" : "string",
            "label" : "keepalive",
            "description" : "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "300s"
          },
          "retry_interval" : {
            "type" : "string",
            "label" : "retry_interval",
            "description" : "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "15s"
          },
          "max_inflight" : {
            "type" : "number",
            "summary" : "最大飞行消息",
            "minimum" : 1,
            "label" : "最大飞行消息",
            "description" : "MQTT 协议的最大飞行（已发送但未确认）消息",
            "default" : 32
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "ingress" : {
            "$ref" : "#/components/schemas/connector-mqtt.ingress",
            "summary" : "入方向配置",
            "label" : "入方向配置",
            "description" : "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。"
          },
          "egress" : {
            "$ref" : "#/components/schemas/connector-mqtt.egress",
            "summary" : "出方向配置",
            "label" : "出方向配置",
            "description" : "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。"
          }
        },
        "required" : [
          "server"
        ]
      },
      "bridge_hstreamdb.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "hstreamdb"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "桥接方向",
            "label" : "桥接方向",
            "description" : "桥接的方向， 必须是 egress",
            "default" : "egress"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HStreamDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HStreamDB。"
          },
          "payload" : {
            "type" : "string",
            "summary" : "消息内容",
            "label" : "消息内容",
            "description" : "要转发到 HStreamDB 的数据内容，支持占位符",
            "default" : "${payload}"
          },
          "connector" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/connector_hstreamdb.config"
              },
              {
                "type" : "string"
              }
            ],
            "summary" : "连接器通用配置。",
            "label" : "连接器通用配置。",
            "example" : "hstreamdb:demo",
            "description" : "连接器的通用配置。"
          }
        },
        "required" : [
          "connector",
          "name",
          "type"
        ]
      },
      "bridge_redis.creation_opts_redis_sentinel" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_sqlserver.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "sqlserver"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )"
          },
          "driver" : {
            "type" : "string",
            "summary" : "SQL Server Driver 名称",
            "label" : "SQL Server Driver 名称",
            "description" : "SQL Server Driver 名称",
            "default" : "ms-sql"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Microsoft SQL Server。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_sqlserver.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 SQL Server 默认端口 1433。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "sa"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_pgsql.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "pgsql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_matrix.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "pgsql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_mqtt.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_mqtt.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "mode" : {
            "type" : "enum",
            "symbols" : [
              "cluster_shareload"
            ],
            "summary" : "MQTT 桥接模式",
            "label" : "MQTT 桥接模式",
            "description" : "MQTT 桥的模式。 <br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。",
            "default" : "cluster_shareload"
          },
          "server" : {
            "type" : "string",
            "summary" : "Broker主机和端口",
            "label" : "Broker主机和端口",
            "description" : "远程 MQTT Broker的主机和端口。"
          },
          "clientid_prefix" : {
            "type" : "string",
            "summary" : "客户ID前缀",
            "label" : "客户ID前缀",
            "description" : "可选的前缀，用于在出口网桥使用的clientid前加上前缀。"
          },
          "reconnect_interval" : {
            "type" : "string",
            "label" : "reconnect_interval",
            "description" : "reconnect_interval Description",
            "deprecated" : true
          },
          "proto_ver" : {
            "type" : "enum",
            "symbols" : [
              "v3",
              "v4",
              "v5"
            ],
            "summary" : "协议版本",
            "label" : "协议版本",
            "description" : "MQTT 协议版本",
            "default" : "v4"
          },
          "bridge_mode" : {
            "type" : "boolean",
            "summary" : "Bridge 模式",
            "label" : "Bridge 模式",
            "description" : "是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>如果设置为 true ，桥接会告诉远端服务器当前连接是一个桥接而不是一个普通的客户端。<br/>这意味着消息回环检测会更加高效，并且远端服务器收到的保留消息的标志位会透传给本地。",
            "default" : false
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "MQTT 协议的用户名"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "MQTT 协议的密码"
          },
          "clean_start" : {
            "type" : "boolean",
            "summary" : "清除会话",
            "label" : "清除会话",
            "description" : "与 ingress MQTT 桥的远程服务器重连时是否清除老的 MQTT 会话。",
            "default" : true
          },
          "keepalive" : {
            "type" : "string",
            "label" : "keepalive",
            "description" : "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "300s"
          },
          "retry_interval" : {
            "type" : "string",
            "label" : "retry_interval",
            "description" : "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "15s"
          },
          "max_inflight" : {
            "type" : "number",
            "summary" : "最大飞行消息",
            "minimum" : 1,
            "label" : "最大飞行消息",
            "description" : "MQTT 协议的最大飞行（已发送但未确认）消息",
            "default" : 32
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "ingress" : {
            "$ref" : "#/components/schemas/connector-mqtt.ingress",
            "summary" : "入方向配置",
            "label" : "入方向配置",
            "description" : "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。"
          },
          "egress" : {
            "$ref" : "#/components/schemas/connector-mqtt.egress",
            "summary" : "出方向配置",
            "label" : "出方向配置",
            "description" : "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。"
          }
        },
        "required" : [
          "server"
        ]
      },
      "bridge_dynamo.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息存入数据库",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 DynamoDB。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_dynamo.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "DynamoDB 地址",
            "label" : "DynamoDB 地址",
            "description" : "DynamoDB 的地址。"
          },
          "table" : {
            "type" : "string",
            "summary" : "表",
            "label" : "表",
            "description" : "DynamoDB 的表。"
          },
          "aws_access_key_id" : {
            "type" : "string",
            "summary" : "连接访问 ID",
            "label" : "连接访问 ID",
            "description" : "DynamoDB 的访问 ID。"
          },
          "aws_secret_access_key" : {
            "type" : "string",
            "summary" : "连接访问密钥",
            "label" : "连接访问密钥",
            "description" : "DynamoDB 的访问密钥。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "aws_access_key_id",
          "aws_secret_access_key",
          "table",
          "url"
        ]
      },
      "bridge_redis.put_sentinel" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_sentinel",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "sentinel"
            ],
            "summary" : "哨兵模式",
            "label" : "哨兵模式",
            "description" : "哨兵模式。当 Redis 服务运行在哨兵模式下，该配置必须设置为 'sentinel'。",
            "default" : "sentinel"
          },
          "sentinel" : {
            "type" : "string",
            "summary" : "集群名称",
            "label" : "集群名称",
            "description" : "Redis 哨兵模式下的集群名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "command_template",
          "sentinel",
          "servers"
        ]
      },
      "bridge_kafka.producer_kafka_opts" : {
        "type" : "object",
        "properties" : {
          "topic" : {
            "type" : "string",
            "summary" : "Kafka 主题名称",
            "label" : "Kafka 主题名称",
            "description" : "Kafka 主题名称"
          },
          "message" : {
            "$ref" : "#/components/schemas/bridge_kafka.kafka_message",
            "summary" : "Kafka 消息模版",
            "label" : "Kafka 消息模版",
            "description" : "用于生成 Kafka 消息的模版。"
          },
          "max_batch_bytes" : {
            "type" : "byteSize",
            "summary" : "最大批量字节数",
            "label" : "最大批量字节数",
            "description" : "最大消息批量字节数。大多数 Kafka 环境的默认最低值是 1 MB，EMQX 的默认值比 1 MB 更小是因为需要补偿 Kafka 消息编码所需要的额外字节（尤其是当每条消息都很小的情况下）。当单个消息的大小超过该限制时，它仍然会被发送，（相当于该批量中只有单个消息）。",
            "default" : "896KB"
          },
          "compression" : {
            "type" : "enum",
            "symbols" : [
              "no_compression",
              "snappy",
              "gzip"
            ],
            "summary" : "压缩",
            "label" : "压缩",
            "description" : "压缩方法。",
            "default" : "no_compression"
          },
          "partition_strategy" : {
            "type" : "enum",
            "symbols" : [
              "random",
              "key_dispatch"
            ],
            "summary" : "分区选择策略",
            "label" : "分区选择策略",
            "description" : "设置消息发布时应该如何选择 Kafka 分区。<br/><br/><code>random</code>: 为每个消息随机选择一个分区。<br/><code>key_dispatch</code>: Hash Kafka message key to a partition number",
            "default" : "random"
          },
          "required_acks" : {
            "type" : "enum",
            "symbols" : [
              "all_isr",
              "leader_only",
              "none"
            ],
            "summary" : "Kafka 确认数量",
            "label" : "Kafka 确认数量",
            "description" : "设置 Kafka leader 在返回给 EMQX 确认之前需要等待多少个 follower 的确认。<br/><br/><code>all_isr</code>: 需要所有的在线复制者都确认。<br/><code>leader_only</code>: 仅需要分区 leader 确认。<br/><code>none</code>: 无需 Kafka 回复任何确认。",
            "default" : "all_isr"
          },
          "partition_count_refresh_interval" : {
            "type" : "duration",
            "summary" : "分区数量刷新间隔",
            "label" : "分区数量刷新间隔",
            "description" : "配置 Kafka 刷新分区数量的时间间隔。<br/>EMQX 发现 Kafka 分区数量增加后，会开始按 <code>partition_strategy<code> 配置，把消息发送到新的分区中。",
            "default" : "60s"
          },
          "max_inflight" : {
            "type" : "string",
            "summary" : "飞行窗口",
            "label" : "飞行窗口",
            "description" : "设置 Kafka 生产者（每个分区一个）在收到 Kafka 的确认前最多发送多少个请求（批量）。调大这个值通常可以增加吞吐量，但是，当该值设置大于 1 时存在消息乱序的风险。",
            "default" : 10
          },
          "buffer" : {
            "$ref" : "#/components/schemas/bridge_kafka.producer_buffer",
            "summary" : "消息缓存",
            "label" : "消息缓存",
            "description" : "配置消息缓存的相关参数。<br/><br/>当 EMQX 需要发送的消息超过 Kafka 处理能力，或者当 Kafka 临时下线时，EMQX 内部会将消息缓存起来。"
          }
        },
        "required" : [
          "topic"
        ]
      },
      "bridge_tdengine.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, ${id}, ${topic}, ${qos}, ${payload}, ${timestamp})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 TDengine。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 TDengine 默认端口 6041。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "password",
          "server"
        ]
      },
      "bridge_mqtt.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mqtt"
            ],
            "summary" : "Bridge 类型",
            "label" : "Bridge 类型",
            "description" : "Bridge 的类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "Bridge 名字",
            "label" : "Bridge 名字",
            "description" : "Bridge 名字，Bridge 的可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_mqtt.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "mode" : {
            "type" : "enum",
            "symbols" : [
              "cluster_shareload"
            ],
            "summary" : "MQTT 桥接模式",
            "label" : "MQTT 桥接模式",
            "description" : "MQTT 桥的模式。 <br/><br/>- cluster_shareload：在 emqx 集群的每个节点上创建一个 MQTT 连接。<br/><br/>在“cluster_shareload”模式下，来自远程代理的传入负载通过共享订阅的方式接收。<br/><br/>请注意，<code>clientid</code> 以节点名称为后缀，这是为了避免不同节点之间的 <code> clientid</code> 冲突。<br/>而且对于入口连接的 <code>remote.topic</code>，我们只能使用共享订阅主题过滤器。",
            "default" : "cluster_shareload"
          },
          "server" : {
            "type" : "string",
            "summary" : "Broker主机和端口",
            "label" : "Broker主机和端口",
            "description" : "远程 MQTT Broker的主机和端口。"
          },
          "clientid_prefix" : {
            "type" : "string",
            "summary" : "客户ID前缀",
            "label" : "客户ID前缀",
            "description" : "可选的前缀，用于在出口网桥使用的clientid前加上前缀。"
          },
          "reconnect_interval" : {
            "type" : "string",
            "label" : "reconnect_interval",
            "description" : "reconnect_interval Description",
            "deprecated" : true
          },
          "proto_ver" : {
            "type" : "enum",
            "symbols" : [
              "v3",
              "v4",
              "v5"
            ],
            "summary" : "协议版本",
            "label" : "协议版本",
            "description" : "MQTT 协议版本",
            "default" : "v4"
          },
          "bridge_mode" : {
            "type" : "boolean",
            "summary" : "Bridge 模式",
            "label" : "Bridge 模式",
            "description" : "是否启用 Bridge Mode。<br/>注意：此设置只针对 MQTT 协议版本 < 5.0 有效，并且需要远程 MQTT Broker 支持 Bridge Mode。<br/>如果设置为 true ，桥接会告诉远端服务器当前连接是一个桥接而不是一个普通的客户端。<br/>这意味着消息回环检测会更加高效，并且远端服务器收到的保留消息的标志位会透传给本地。",
            "default" : false
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "MQTT 协议的用户名"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "MQTT 协议的密码"
          },
          "clean_start" : {
            "type" : "boolean",
            "summary" : "清除会话",
            "label" : "清除会话",
            "description" : "与 ingress MQTT 桥的远程服务器重连时是否清除老的 MQTT 会话。",
            "default" : true
          },
          "keepalive" : {
            "type" : "string",
            "label" : "keepalive",
            "description" : "MQTT Keepalive. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "300s"
          },
          "retry_interval" : {
            "type" : "string",
            "label" : "retry_interval",
            "description" : "Message retry interval. Delay for the MQTT bridge to retry sending the QoS1/QoS2 messages in case of ACK not received. Time interval is a string that contains a number followed by time unit:<br/>- `ms` for milliseconds,<br/>- `s` for seconds,<br/>- `m` for minutes,<br/>- `h` for hours;<br/><br/>or combination of whereof: `1h5m0s`",
            "default" : "15s"
          },
          "max_inflight" : {
            "type" : "number",
            "summary" : "最大飞行消息",
            "minimum" : 1,
            "label" : "最大飞行消息",
            "description" : "MQTT 协议的最大飞行（已发送但未确认）消息",
            "default" : 32
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "ingress" : {
            "$ref" : "#/components/schemas/connector-mqtt.ingress",
            "summary" : "入方向配置",
            "label" : "入方向配置",
            "description" : "入口配置定义了该桥接如何从远程 MQTT Broker 接收消息，然后将消息发送到本地 Broker。<br/><br/>        以下字段中允许使用带有变量的模板：'remote.qos', 'local.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>        注意：如果此桥接被用作规则的输入，并且配置了 'local.topic'，则从远程代理获取的消息将同时被发送到 'local.topic' 和规则。"
          },
          "egress" : {
            "$ref" : "#/components/schemas/connector-mqtt.egress",
            "summary" : "出方向配置",
            "label" : "出方向配置",
            "description" : "出口配置定义了该桥接如何将消息从本地 Broker 转发到远程 Broker。<br/>以下字段中允许使用带有变量的模板：'remote.topic', 'local.qos', 'local.retain', 'local.payload'。<br/><br/>注意：如果此桥接被用作规则的动作，并且配置了 'local.topic'，则从规则输出的数据以及匹配到 'local.topic' 的 MQTT 消息都会被转发。"
          }
        },
        "required" : [
          "name",
          "server",
          "type"
        ]
      },
      "bridge_kafka.kafka_message" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "summary" : "消息的 Key",
            "label" : "消息的 Key",
            "description" : "生成 Kafka 消息 Key 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code> ，而非空字符串。",
            "default" : "${.clientid}"
          },
          "value" : {
            "type" : "string",
            "summary" : "消息的 Value",
            "label" : "消息的 Value",
            "description" : "生成 Kafka 消息 Value 的模版。如果模版生成后为空值，则会使用 Kafka 的 <code>NULL</code>，而非空字符串。",
            "default" : "${.}"
          },
          "timestamp" : {
            "type" : "string",
            "summary" : "消息的时间戳",
            "label" : "消息的时间戳",
            "description" : "生成 Kafka 消息时间戳的模版。该时间必需是一个整型数值（可以是字符串格式）例如 <code>1661326462115</code> 或 <code>'1661326462115'</code>。当所需的输入字段不存在，或不是一个整型时，则会使用当前系统时间。",
            "default" : "${.timestamp}"
          }
        }
      },
      "bridge_timescale.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "bridge_mongodb.get_single" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "Standalone 模式",
            "label" : "Standalone 模式",
            "description" : "Standalone 模式。当 MongoDB 服务运行在 standalone 模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mongodb_single"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型。"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名称",
            "label" : "桥接名称",
            "description" : "桥接名称。"
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_rocketmq.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "rocketmq"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息转发给 RocketMQ。 <br><br/>            模板可以是任意带有占位符的合法字符串, 例如:<br><br/>            - ${id}, ${username}, ${clientid}, ${timestamp}<br><br/>            - {\"id\" : ${id}, \"username\" : ${username}}",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 RocketMQ。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 RocketMQ 默认端口 9876。"
          },
          "topic" : {
            "type" : "string",
            "summary" : "RocketMQ 主题",
            "label" : "RocketMQ 主题",
            "description" : "RocketMQ 主题",
            "default" : "TopicTest"
          },
          "access_key" : {
            "type" : "string",
            "summary" : "AccessKey",
            "label" : "AccessKey",
            "description" : "RocketMQ 服务器的 `accessKey`。",
            "default" : ""
          },
          "secret_key" : {
            "type" : "string",
            "summary" : "SecretKey",
            "label" : "SecretKey",
            "description" : "RocketMQ 服务器的 `secretKey`。",
            "default" : ""
          },
          "security_token" : {
            "type" : "string",
            "summary" : "安全令牌",
            "label" : "安全令牌",
            "description" : "RocketMQ 服务器安全令牌",
            "default" : ""
          },
          "sync_timeout" : {
            "type" : "duration",
            "summary" : "同步调用超时时间",
            "label" : "同步调用超时时间",
            "description" : "RocketMQ 驱动同步调用的超时时间。",
            "default" : "3s"
          },
          "refresh_interval" : {
            "type" : "duration",
            "summary" : "主题路由更新间隔",
            "label" : "主题路由更新间隔",
            "description" : "RocketMQ 主题路由更新间隔。",
            "default" : "3s"
          },
          "send_buffer" : {
            "type" : "byteSize",
            "summary" : "发送消息的缓冲区大小",
            "label" : "发送消息的缓冲区大小",
            "description" : "RocketMQ 驱动的套字节发送消息的缓冲区大小",
            "default" : "1024KB"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_kafka.socket_opts" : {
        "type" : "object",
        "properties" : {
          "sndbuf" : {
            "type" : "byteSize",
            "summary" : "Socket 发送缓存大小",
            "label" : "Socket 发送缓存大小",
            "description" : "TCP socket 的发送缓存调优。默认值是针对高吞吐量的一个推荐值。",
            "default" : "1MB"
          },
          "recbuf" : {
            "type" : "byteSize",
            "summary" : "Socket 收包缓存大小",
            "label" : "Socket 收包缓存大小",
            "description" : "TCP socket 的收包缓存调优。默认值是针对高吞吐量的一个推荐值。",
            "default" : "1MB"
          }
        }
      },
      "bridge_redis.post_single" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_single",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "单机模式",
            "label" : "单机模式",
            "description" : "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "redis_single"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          }
        },
        "required" : [
          "command_template",
          "name",
          "server",
          "type"
        ]
      },
      "connector-mqtt.ingress_local" : {
        "type" : "object",
        "properties" : {
          "topic" : {
            "type" : "string",
            "summary" : "本地主题",
            "label" : "本地主题",
            "description" : "向本地broker的哪个topic发送消息。<br/><br/>允许使用带有变量的模板。"
          },
          "qos" : {
            "oneOf" : [
              {
                "type" : "string"
              },
              {
                "type" : "enum",
                "symbols" : [
                  0,
                  1,
                  2
                ]
              }
            ],
            "summary" : "本地 QoS",
            "label" : "本地 QoS",
            "description" : "待发送 MQTT 消息的 QoS。<br/><br/>允许使用带有变量的模板。",
            "default" : "${qos}"
          },
          "retain" : {
            "oneOf" : [
              {
                "type" : "string"
              },
              {
                "type" : "boolean"
              }
            ],
            "summary" : "保留消息标志",
            "label" : "保留消息标志",
            "description" : "要发送的 MQTT 消息的“保留”标志。<br/><br/>允许使用带有变量的模板。",
            "default" : "${retain}"
          },
          "payload" : {
            "type" : "string",
            "summary" : "消息负载",
            "label" : "消息负载",
            "description" : "要发送的 MQTT 消息的负载。<br/><br/>允许使用带有变量的模板。"
          }
        }
      },
      "bridge_mysql.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "mysql"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, FROM_UNIXTIME(${timestamp}/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 MySQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 MySQL 默认端口 3306。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_webhook.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "webhook"
            ],
            "summary" : "Bridge 类型",
            "label" : "Bridge 类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "Bridge 名字",
            "label" : "Bridge 名字",
            "description" : "Bridge 名字，Bridge 的可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_webhook.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "retry_interval" : {
            "type" : "duration",
            "label" : "retry_interval",
            "description" : "retry_interval Description",
            "deprecated" : true
          },
          "pool_type" : {
            "type" : "enum",
            "symbols" : [
              "random",
              "hash"
            ],
            "summary" : "连接池类型",
            "label" : "连接池类型",
            "description" : "连接池的类型，可用类型有`random`, `hash`。",
            "default" : "random"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "enable_pipelining" : {
            "type" : "string",
            "summary" : "HTTP 管道",
            "label" : "HTTP 管道",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "request" : {
            "$ref" : "#/components/schemas/connector-http.request",
            "summary" : "HTTP 请求",
            "label" : "HTTP 请求",
            "description" : "设置 HTTP 请求的参数。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "HTTP Bridge",
            "label" : "HTTP Bridge",
            "description" : "HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。"
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "Bridge 方向",
            "label" : "Bridge 方向",
            "description" : "已废弃，Bridge 的方向，必须是 egress",
            "deprecated" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。"
          },
          "method" : {
            "type" : "enum",
            "symbols" : [
              "post",
              "put",
              "get",
              "delete"
            ],
            "summary" : "HTTP 请求方法",
            "label" : "HTTP 请求方法",
            "description" : "HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。",
            "default" : "post"
          },
          "headers" : {
            "type" : "object",
            "summary" : "HTTP 请求标头",
            "label" : "HTTP 请求标头",
            "description" : "HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。",
            "default" : {
              "keep-alive" : "timeout=5",
              "content-type" : "application/json",
              "connection" : "keep-alive",
              "cache-control" : "no-cache",
              "accept" : "application/json"
            }
          },
          "body" : {
            "type" : "string",
            "summary" : "HTTP 请求正文",
            "label" : "HTTP 请求正文",
            "description" : "HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。"
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "HTTP 请求重试次数",
            "minimum" : 1,
            "label" : "HTTP 请求重试次数",
            "description" : "HTTP 请求失败最大重试次数",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "HTTP 请求超时",
            "default" : "15s"
          }
        },
        "required" : [
          "name",
          "type",
          "url"
        ]
      },
      "bridge_sqlserver.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_kafka.auth_gssapi_kerberos" : {
        "type" : "object",
        "properties" : {
          "kerberos_principal" : {
            "type" : "string",
            "summary" : "Kerberos Principal",
            "label" : "Kerberos Principal",
            "description" : "SASL GSSAPI 认证方法的 Kerberos principal，例如 <code>client_name@MY.KERBEROS.REALM.MYDOMAIN.COM</code>注意：这里使用的 realm 需要配置在 EMQX 服务器的 /etc/krb5.conf 中"
          },
          "kerberos_keytab_file" : {
            "type" : "string",
            "summary" : "Kerberos keytab 文件",
            "label" : "Kerberos keytab 文件",
            "description" : "SASL GSSAPI 认证方法的 Kerberos keytab 文件。注意：该文件需要上传到 EMQX 服务器中，且运行 EMQX 服务的系统账户需要有读取权限。"
          }
        },
        "required" : [
          "kerberos_keytab_file",
          "kerberos_principal"
        ]
      },
      "bridge_redis.put_single" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Redis。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 Redis。"
          },
          "command_template" : {
            "type" : "array",
            "summary" : "Redis Command  模板",
            "label" : "Redis Command  模板",
            "items" : {
              "type" : "string"
            },
            "description" : "用于推送数据的 Redis 命令模板。 每个列表元素代表一个命令名称或其参数。<br/>例如，要通过键值 `msgs` 将消息体推送到 Redis 列表中，数组元素应该是： `rpush`, `msgs`, `${payload}`。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_redis.creation_opts_redis_single",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Redis 默认端口 6379。"
          },
          "redis_type" : {
            "type" : "enum",
            "symbols" : [
              "single"
            ],
            "summary" : "单机模式",
            "label" : "单机模式",
            "description" : "单机模式。当 Redis 服务运行在单机模式下，该配置必须设置为 'single'。",
            "default" : "single"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "database" : {
            "type" : "number",
            "summary" : "数据库 ID",
            "label" : "数据库 ID",
            "description" : "Redis 数据库 ID。",
            "default" : 0
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "command_template",
          "server"
        ]
      },
      "bridge_kafka.get_consumer" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "kafka_consumer",
              "kafka"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.consumer_kafka_opts",
            "summary" : "Kafka 消费者",
            "label" : "Kafka 消费者",
            "description" : "Kafka消费者配置。"
          },
          "topic_mapping" : {
            "type" : "array",
            "summary" : "主题映射关系",
            "label" : "主题映射关系",
            "items" : {
              "$ref" : "#/components/schemas/bridge_kafka.consumer_topic_mapping"
            },
            "description" : "指定 Kafka 主题和 MQTT 主题之间的映射关系。 应至少包含一项。"
          },
          "key_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Key 编码模式",
            "label" : "Key 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Key。<code>none</code> 使用 Kafka 消息中的 Key 原始值，不进行编码。  注意：在这种情况下，Key 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的密钥或值使用 base-64 编码。",
            "default" : "none"
          },
          "value_encoding_mode" : {
            "type" : "enum",
            "symbols" : [
              "none",
              "base64"
            ],
            "summary" : "Value 编码模式",
            "label" : "Value 编码模式",
            "description" : "通过 MQTT 转发之前，如何处理 Kafka 消息的 Value。<code>none</code> 使用 Kafka 消息中的 Value 原始值，不进行编码。  注意：在这种情况下，Value 必须是一个有效的 UTF-8 字符串。<br/><code>base64</code> 对收到的 Value 使用 base-64 编码。",
            "default" : "none"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "name",
          "topic_mapping",
          "type"
        ]
      },
      "bridge_webhook.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_webhook.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接HTTP服务器的超时时间。",
            "default" : "15s"
          },
          "retry_interval" : {
            "type" : "duration",
            "label" : "retry_interval",
            "description" : "retry_interval Description",
            "deprecated" : true
          },
          "pool_type" : {
            "type" : "enum",
            "symbols" : [
              "random",
              "hash"
            ],
            "summary" : "连接池类型",
            "label" : "连接池类型",
            "description" : "连接池的类型，可用类型有`random`, `hash`。",
            "default" : "random"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "enable_pipelining" : {
            "type" : "string",
            "summary" : "HTTP 管道",
            "label" : "HTTP 管道",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "request" : {
            "$ref" : "#/components/schemas/connector-http.request",
            "summary" : "HTTP 请求",
            "label" : "HTTP 请求",
            "description" : "设置 HTTP 请求的参数。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "url" : {
            "type" : "string",
            "summary" : "HTTP Bridge",
            "label" : "HTTP Bridge",
            "description" : "HTTP Bridge 的 URL。<br/><br/>路径中允许使用带变量的模板，但是 host， port 不允许使用变量模板。<br/><br/>例如，<code> http://localhost:9901/${topic} </code> 是允许的，<br/>但是<code> http://${host}:9901/message </code><br/>或 <code> http://localhost:${port}/message </code><br/>不允许。"
          },
          "direction" : {
            "type" : "enum",
            "symbols" : [
              "egress"
            ],
            "summary" : "Bridge 方向",
            "label" : "Bridge 方向",
            "description" : "已废弃，Bridge 的方向，必须是 egress",
            "deprecated" : true
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 HTTP 服务器。 <br/><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 HTTP 服务器。"
          },
          "method" : {
            "type" : "enum",
            "symbols" : [
              "post",
              "put",
              "get",
              "delete"
            ],
            "summary" : "HTTP 请求方法",
            "label" : "HTTP 请求方法",
            "description" : "HTTP 请求的方法。 所有可用的方法包括：post、put、get、delete。<br/><br/>允许使用带有变量的模板。",
            "default" : "post"
          },
          "headers" : {
            "type" : "object",
            "summary" : "HTTP 请求标头",
            "label" : "HTTP 请求标头",
            "description" : "HTTP 请求的标头。<br/><br/>允许使用带有变量的模板。",
            "default" : {
              "keep-alive" : "timeout=5",
              "content-type" : "application/json",
              "connection" : "keep-alive",
              "cache-control" : "no-cache",
              "accept" : "application/json"
            }
          },
          "body" : {
            "type" : "string",
            "summary" : "HTTP 请求正文",
            "label" : "HTTP 请求正文",
            "description" : "HTTP 请求的正文。<br/><br/>如果没有设置该字段，请求正文将是包含所有可用字段的 JSON object。<br/><br/>如果该 webhook 是由于收到 MQTT 消息触发的，'所有可用字段' 将是 MQTT 消息的<br/>上下文信息；如果该 webhook 是由于规则触发的，'所有可用字段' 则为触发事件的上下文信息。<br/><br/>允许使用带有变量的模板。"
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "HTTP 请求重试次数",
            "minimum" : 1,
            "label" : "HTTP 请求重试次数",
            "description" : "HTTP 请求失败最大重试次数",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "HTTP 请求超时",
            "default" : "15s"
          }
        },
        "required" : [
          "url"
        ]
      },
      "bridge_kafka.consumer_kafka_opts" : {
        "type" : "object",
        "properties" : {
          "max_batch_bytes" : {
            "type" : "byteSize",
            "summary" : "拉取字节数",
            "label" : "拉取字节数",
            "description" : "设置每次从 Kafka 拉取数据的字节数。如该配置小于 Kafka 消息的大小，可能会影响消费性能。",
            "default" : "896KB"
          },
          "offset_reset_policy" : {
            "type" : "enum",
            "symbols" : [
              "latest",
              "earliest"
            ],
            "summary" : "偏移重置策略",
            "label" : "偏移重置策略",
            "description" : "如不存在偏移量历史记录或历史记录失效，消费者应使用哪个偏移量开始消费。",
            "default" : "latest"
          },
          "offset_commit_interval_seconds" : {
            "type" : "string",
            "summary" : "偏移提交间隔",
            "label" : "偏移提交间隔",
            "description" : "指定 Kafka 消费组偏移量提交的时间间隔。",
            "default" : 5
          }
        }
      },
      "bridge_rocketmq.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "template" : {
            "type" : "string",
            "summary" : "模板",
            "label" : "模板",
            "description" : "模板, 默认为空，为空时将会将整个消息转发给 RocketMQ。 <br><br/>            模板可以是任意带有占位符的合法字符串, 例如:<br><br/>            - ${id}, ${username}, ${clientid}, ${timestamp}<br><br/>            - {\"id\" : ${id}, \"username\" : ${username}}",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 RocketMQ。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 RocketMQ 默认端口 9876。"
          },
          "topic" : {
            "type" : "string",
            "summary" : "RocketMQ 主题",
            "label" : "RocketMQ 主题",
            "description" : "RocketMQ 主题",
            "default" : "TopicTest"
          },
          "access_key" : {
            "type" : "string",
            "summary" : "AccessKey",
            "label" : "AccessKey",
            "description" : "RocketMQ 服务器的 `accessKey`。",
            "default" : ""
          },
          "secret_key" : {
            "type" : "string",
            "summary" : "SecretKey",
            "label" : "SecretKey",
            "description" : "RocketMQ 服务器的 `secretKey`。",
            "default" : ""
          },
          "security_token" : {
            "type" : "string",
            "summary" : "安全令牌",
            "label" : "安全令牌",
            "description" : "RocketMQ 服务器安全令牌",
            "default" : ""
          },
          "sync_timeout" : {
            "type" : "duration",
            "summary" : "同步调用超时时间",
            "label" : "同步调用超时时间",
            "description" : "RocketMQ 驱动同步调用的超时时间。",
            "default" : "3s"
          },
          "refresh_interval" : {
            "type" : "duration",
            "summary" : "主题路由更新间隔",
            "label" : "主题路由更新间隔",
            "description" : "RocketMQ 主题路由更新间隔。",
            "default" : "3s"
          },
          "send_buffer" : {
            "type" : "byteSize",
            "summary" : "发送消息的缓冲区大小",
            "label" : "发送消息的缓冲区大小",
            "description" : "RocketMQ 驱动的套字节发送消息的缓冲区大小",
            "default" : "1024KB"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "servers"
        ]
      },
      "bridge_cassa.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "cassandra"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "cql" : {
            "type" : "string",
            "summary" : "CQL 模板",
            "label" : "CQL 模板",
            "format" : "sql",
            "description" : "CQL 模板",
            "default" : "insert into mqtt_msg(topic, msgid, sender, qos, payload, arrived, retain) values (${topic}, ${id}, ${clientid}, ${qos}, ${payload}, ${timestamp}, ${flags.retain})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Cassandra。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "servers" : {
            "type" : "string",
            "summary" : "Servers",
            "label" : "Servers",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port][,Host2:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 Cassandra 默认端口 9042。"
          },
          "keyspace" : {
            "type" : "string",
            "summary" : "Keyspace",
            "label" : "Keyspace",
            "description" : "要连接到的 Keyspace 名称。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "keyspace",
          "name",
          "servers",
          "type"
        ]
      },
      "bridge_tdengine.get" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "enum",
            "symbols" : [
              "connected",
              "disconnected",
              "connecting",
              "inconsistent"
            ],
            "summary" : "Bridge 状态",
            "label" : "Bridge 状态",
            "description" : "Bridge 的连接状态<br/><br/>- <code>connecting</code>: 启动时的初始状态。<br/><br/>- <code>connected</code>: 桥接驱动健康检查正常。<br/><br/>- <code>disconnected</code>: 当桥接无法通过健康检查。<br/><br/>- <code>stopped</code>: 桥接处于停用状态。<br/><br/>- <code>inconsistent</code>: 集群中有各节点汇报的状态不一致。"
          },
          "status_reason" : {
            "type" : "string",
            "summary" : "失败原因",
            "label" : "失败原因",
            "example" : "Connection refused",
            "description" : "桥接连接失败的原因。"
          },
          "node_status" : {
            "type" : "array",
            "summary" : "节点的状态",
            "label" : "节点的状态",
            "items" : {
              "$ref" : "#/components/schemas/bridge.node_status"
            },
            "description" : "节点的状态"
          },
          "type" : {
            "type" : "enum",
            "symbols" : [
              "tdengine"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(ts, msgid, mqtt_topic, qos, payload, arrived) values (${ts}, ${id}, ${topic}, ${qos}, ${payload}, ${timestamp})"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 TDengine。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 TDengine 默认端口 6041。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "root"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "name",
          "password",
          "server",
          "type"
        ]
      },
      "bridge_kafka.put_producer" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或停用",
            "label" : "启用或停用",
            "description" : "启用（true）或停用该（false）Kafka 数据桥接。",
            "default" : true
          },
          "bootstrap_hosts" : {
            "type" : "string",
            "summary" : "主机列表",
            "label" : "主机列表",
            "description" : "用逗号分隔的 <code>host[:port]</code> 主机列表。默认端口号为 9092。"
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "建立 TCP 连接时的最大等待时长（若启用认证，这个等待时长也包含完成认证所需时间）。",
            "default" : "5s"
          },
          "min_metadata_refresh_interval" : {
            "type" : "duration",
            "summary" : "元数据刷新最小间隔",
            "label" : "元数据刷新最小间隔",
            "description" : "刷新 Kafka broker 和 Kafka 主题元数据段最短时间间隔。设置太小可能会增加 Kafka 压力。",
            "default" : "3s"
          },
          "metadata_request_timeout" : {
            "type" : "duration",
            "summary" : "元数据请求超时",
            "label" : "元数据请求超时",
            "description" : "刷新元数据时最大等待时长。",
            "default" : "5s"
          },
          "authentication" : {
            "oneOf" : [
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_gssapi_kerberos"
              },
              {
                "$ref" : "#/components/schemas/bridge_kafka.auth_username_password"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "none"
                ]
              }
            ],
            "summary" : "认证",
            "label" : "认证",
            "description" : "认证参数。",
            "default" : "none"
          },
          "socket_opts" : {
            "$ref" : "#/components/schemas/bridge_kafka.socket_opts",
            "summary" : "Socket 参数",
            "label" : "Socket 参数",
            "description" : "更多 Socket 参数设置。"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "源 MQTT 主题",
            "label" : "源 MQTT 主题",
            "description" : "MQTT 主题数据源由桥接指定，或留空由规则动作指定。"
          },
          "kafka" : {
            "$ref" : "#/components/schemas/bridge_kafka.producer_kafka_opts",
            "summary" : "生产者参数",
            "label" : "生产者参数",
            "description" : "Kafka 生产者参数。"
          }
        },
        "required" : [
          "bootstrap_hosts",
          "kafka"
        ]
      },
      "connector_hstreamdb.config" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "summary" : "HStreamDB 服务器 URL",
            "label" : "HStreamDB 服务器 URL",
            "description" : "HStreamDB 服务器 URL"
          },
          "stream" : {
            "type" : "string",
            "summary" : "HStreamDB 流名称",
            "label" : "HStreamDB 流名称",
            "description" : "HStreamDB 流名称"
          },
          "ordering_key" : {
            "type" : "string",
            "summary" : "HStreamDB 分区键",
            "label" : "HStreamDB 分区键",
            "description" : "HStreamDB 分区键"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "HStreamDB 连接池大小",
            "label" : "HStreamDB 连接池大小",
            "description" : "HStreamDB 连接池大小"
          }
        },
        "required" : [
          "pool_size",
          "stream",
          "url"
        ]
      },
      "resource_schema.creation_opts" : {
        "type" : "object",
        "properties" : {
          "worker_pool_size" : {
            "type" : "number",
            "summary" : "缓存池大小",
            "minimum" : 1,
            "label" : "缓存池大小",
            "description" : "缓存队列 worker 数量。仅对 egress 类型的桥接有意义。当桥接仅有 ingress 方向时，可设置为 0，否则必须大于 0。",
            "default" : 16
          },
          "health_check_interval" : {
            "type" : "duration",
            "summary" : "健康检查间隔",
            "label" : "健康检查间隔",
            "description" : "健康检查间隔。",
            "default" : "15s"
          },
          "start_after_created" : {
            "type" : "boolean",
            "summary" : "创建后立即启动",
            "label" : "创建后立即启动",
            "description" : "是否在创建资源后立即启动资源。",
            "default" : "true"
          },
          "start_timeout" : {
            "type" : "duration",
            "summary" : "启动超时时间",
            "label" : "启动超时时间",
            "description" : "在回复资源创建请求前等待资源进入健康状态的时间。",
            "default" : "5s"
          },
          "auto_restart_interval" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "自动重连间隔",
            "label" : "自动重连间隔",
            "description" : "资源断开以后，自动重连的时间间隔。",
            "default" : "60s"
          },
          "query_mode" : {
            "type" : "enum",
            "symbols" : [
              "sync",
              "async"
            ],
            "summary" : "请求模式",
            "label" : "请求模式",
            "description" : "请求模式。可选 '同步/异步'，默认为'异步'模式。",
            "default" : "async"
          },
          "request_timeout" : {
            "oneOf" : [
              {
                "type" : "duration"
              },
              {
                "type" : "enum",
                "symbols" : [
                  "infinity"
                ]
              }
            ],
            "summary" : "请求超期",
            "label" : "请求超期",
            "description" : "从请求进入缓冲区开始计时，如果请求在规定的时间内仍停留在缓冲区内或者已发送但未能及时收到响应或确认，该请求将被视为过期。",
            "default" : "15s"
          },
          "inflight_window" : {
            "type" : "string",
            "summary" : "请求飞行队列窗口",
            "label" : "请求飞行队列窗口",
            "description" : "请求飞行队列窗口大小。当请求模式为异步时，如果需要严格保证来自同一 MQTT 客户端的消息有序，则必须将此值设为 1。",
            "default" : 100
          },
          "enable_batch" : {
            "type" : "boolean",
            "summary" : "启用批量模式",
            "label" : "启用批量模式",
            "description" : "启用批量模式。",
            "deprecated" : true,
            "default" : true
          },
          "batch_size" : {
            "type" : "string",
            "summary" : "最大批量请求大小",
            "label" : "最大批量请求大小",
            "description" : "最大批量请求大小。如果设为1，则无批处理。",
            "default" : 1
          },
          "batch_time" : {
            "type" : "duration",
            "summary" : "批量等待最大间隔",
            "label" : "批量等待最大间隔",
            "description" : "在较低消息率情况下尝试累积批量输出时的最大等待间隔，以提高资源的利用率。",
            "default" : "0ms"
          },
          "enable_queue" : {
            "type" : "boolean",
            "summary" : "启用磁盘缓存队列",
            "label" : "启用磁盘缓存队列",
            "description" : "启用磁盘缓存队列（仅对 egress 方向桥接有用）。",
            "deprecated" : true,
            "default" : false
          },
          "max_buffer_bytes" : {
            "type" : "byteSize",
            "summary" : "缓存队列最大长度",
            "label" : "缓存队列最大长度",
            "description" : "每个缓存 worker 允许使用的最大字节数。",
            "default" : "256MB"
          }
        }
      },
      "bridge_timescale.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "timescale"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "Bridge 类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload, arrived) values (${id}, ${topic}, ${qos}, ${payload}, TO_TIMESTAMP((${timestamp} :: bigint)/1000))"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 PostgreSQL。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 PostgreSQL 默认端口 5432。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          }
        },
        "required" : [
          "database",
          "name",
          "server",
          "type"
        ]
      },
      "bridge_sqlserver.put" : {
        "type" : "object",
        "properties" : {
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用桥接",
            "label" : "启用/禁用桥接",
            "description" : "启用/禁用桥接",
            "default" : true
          },
          "sql" : {
            "type" : "string",
            "summary" : "SQL 模板",
            "label" : "SQL 模板",
            "format" : "sql",
            "description" : "SQL 模板",
            "default" : "insert into t_mqtt_msg(msgid, topic, qos, payload) values ( ${id}, ${topic}, ${qos}, ${payload} )"
          },
          "driver" : {
            "type" : "string",
            "summary" : "SQL Server Driver 名称",
            "label" : "SQL Server Driver 名称",
            "description" : "SQL Server Driver 名称",
            "default" : "ms-sql"
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 Microsoft SQL Server。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/bridge_sqlserver.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "server" : {
            "type" : "string",
            "summary" : "服务器地址",
            "label" : "服务器地址",
            "description" : "将要连接的 IPv4 或 IPv6 地址，或者主机名。<br/><br/>主机名具有以下形式：`Host[:Port]`。<br/><br/>如果未指定 `[:Port]`，则使用 SQL Server 默认端口 1433。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。",
            "default" : "sa"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auto_reconnect" : {
            "type" : "boolean",
            "summary" : "已弃用。自动重连数据库",
            "label" : "已弃用。自动重连数据库",
            "description" : "已弃用。自动重连数据库。",
            "deprecated" : true,
            "default" : true
          }
        },
        "required" : [
          "database",
          "server"
        ]
      },
      "bridge_gcp_pubsub.post" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "enum",
            "symbols" : [
              "gcp_pubsub"
            ],
            "summary" : "桥接类型",
            "label" : "桥接类型",
            "description" : "桥接类型"
          },
          "name" : {
            "type" : "string",
            "summary" : "桥接名字",
            "label" : "桥接名字",
            "description" : "桥接名字，可读描述"
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用/禁用 Bridge",
            "label" : "启用/禁用 Bridge",
            "description" : "启用/禁用 Bridge",
            "default" : true
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          },
          "connect_timeout" : {
            "type" : "duration",
            "summary" : "连接超时",
            "label" : "连接超时",
            "description" : "连接 HTTP 服务器的超时时间。",
            "default" : "15s"
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "连接池大小。",
            "default" : 8
          },
          "pipelining" : {
            "type" : "string",
            "summary" : "HTTP 流水线",
            "label" : "HTTP 流水线",
            "description" : "正整数，设置最大可发送的异步 HTTP 请求数量。当设置为 1 时，表示每次发送完成 HTTP 请求后都需要等待服务器返回，再继续发送下一个请求。",
            "default" : 100
          },
          "max_retries" : {
            "type" : "number",
            "summary" : "最大重试次数",
            "minimum" : 1,
            "label" : "最大重试次数",
            "description" : "请求出错时的最大重试次数。",
            "default" : 2
          },
          "request_timeout" : {
            "type" : "duration",
            "summary" : "HTTP 请求超时",
            "label" : "HTTP 请求超时",
            "description" : "废弃的。在缓冲区设置中配置请求超时。",
            "deprecated" : true,
            "default" : "15s"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "HTTP 请求消息体模板",
            "label" : "HTTP 请求消息体模板",
            "description" : "用于格式化外发信息的模板。 如果未定义，将以JSON格式发送所有可用的上下文。",
            "default" : ""
          },
          "local_topic" : {
            "type" : "string",
            "summary" : "本地 Topic",
            "label" : "本地 Topic",
            "description" : "发送到 'local_topic' 的消息都会转发到 GCP PubSub。 </br><br/>注意：如果这个 Bridge 被用作规则（EMQX 规则引擎）的输出，同时也配置了 'local_topic' ，那么这两部分的消息都会被转发到 GCP PubSub。"
          },
          "pubsub_topic" : {
            "type" : "string",
            "summary" : "GCP PubSub 主题",
            "label" : "GCP PubSub 主题",
            "description" : "要发布消息的GCP PubSub主题。"
          },
          "service_account_json" : {
            "type" : "string",
            "summary" : "GCP 服务账户凭证",
            "label" : "GCP 服务账户凭证",
            "description" : "包含将与 PubSub 一起使用的 GCP 服务账户凭证的 JSON。<br/>当创建GCP服务账户时（如https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount），可以选择下载 JSON 形式的凭证，然后在该配置项中使用。"
          }
        },
        "required" : [
          "name",
          "pubsub_topic",
          "service_account_json",
          "type"
        ]
      },
      "bridge_mongodb.put_sharded" : {
        "type" : "object",
        "properties" : {
          "mongo_type" : {
            "type" : "enum",
            "symbols" : [
              "sharded"
            ],
            "summary" : "Sharded cluster 模式",
            "label" : "Sharded cluster 模式",
            "description" : "Sharded cluster模式。当 MongoDB 服务运行在 sharded 模式下，该配置必须设置为 'sharded'。",
            "default" : "sharded"
          },
          "servers" : {
            "type" : "string",
            "summary" : "服务器列表",
            "label" : "服务器列表",
            "description" : "集群将要连接的节点列表。 节点之间用逗号分隔，如：`Node[,Node].`<br/>每个节点的配置为：将要连接的 IPv4 或 IPv6 地址或主机名。<br/>主机名具有以下形式：`Host[:Port]`。<br/>如果未指定 `[:Port]`，则使用 MongoDB 默认端口 27017。"
          },
          "w_mode" : {
            "type" : "enum",
            "symbols" : [
              "unsafe",
              "safe"
            ],
            "summary" : "写模式",
            "label" : "写模式",
            "description" : "写模式。",
            "default" : "unsafe"
          },
          "srv_record" : {
            "type" : "boolean",
            "summary" : "SRV 记录",
            "label" : "SRV 记录",
            "description" : "使用 DNS SRV 记录。",
            "default" : false
          },
          "pool_size" : {
            "type" : "string",
            "summary" : "连接池大小",
            "label" : "连接池大小",
            "description" : "桥接远端服务时使用的连接池大小。",
            "default" : 8
          },
          "username" : {
            "type" : "string",
            "summary" : "用户名",
            "label" : "用户名",
            "description" : "内部数据库的用户名。"
          },
          "password" : {
            "type" : "string",
            "summary" : "密码",
            "label" : "密码",
            "format" : "password",
            "description" : "内部数据库密码。"
          },
          "auth_source" : {
            "type" : "string",
            "summary" : "认证源",
            "label" : "认证源",
            "description" : "与用户证书关联的数据库名称。"
          },
          "database" : {
            "type" : "string",
            "summary" : "数据库名字",
            "label" : "数据库名字",
            "description" : "数据库名字。"
          },
          "topology" : {
            "$ref" : "#/components/schemas/emqx_connector_mongo.topology",
            "label" : "topology",
            "description" : "topology Description"
          },
          "ssl" : {
            "$ref" : "#/components/schemas/broker.ssl_client_opts",
            "summary" : "启用SSL",
            "label" : "启用SSL",
            "description" : "启用 SSL 连接。",
            "default" : {
              "enable" : false
            }
          },
          "enable" : {
            "type" : "boolean",
            "summary" : "启用或禁用",
            "label" : "启用或禁用",
            "description" : "启用或停用该MongoDB桥",
            "default" : true
          },
          "collection" : {
            "type" : "string",
            "summary" : "将要使用的集合（Collection）",
            "label" : "将要使用的集合（Collection）",
            "description" : "数据将被存储到的集合",
            "default" : "mqtt"
          },
          "payload_template" : {
            "type" : "string",
            "summary" : "有效载荷模板",
            "label" : "有效载荷模板",
            "description" : "用于格式化写入 MongoDB 的消息模板。 如果未定义，规则引擎会使用 JSON 格式序列化所有的可见输入，例如 clientid, topic, payload 等。"
          },
          "resource_opts" : {
            "$ref" : "#/components/schemas/resource_schema.creation_opts",
            "summary" : "资源选项",
            "label" : "资源选项",
            "description" : "资源相关的选项。",
            "default" : {
              
            }
          }
        },
        "required" : [
          "database",
          "servers"
        ]
      }
    }
  }
}