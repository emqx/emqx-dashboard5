{
  "bridge_azure_event_hub.auth_username_password": [
    "password"
  ],
  "bridge_azure_event_hub.kafka_message": [
    "key",
    "value"
  ],
  "bridge_azure_event_hub.post_producer": [
    "authentication",
    "bootstrap_hosts",
    "connect_timeout",
    "enable",
    "kafka",
    "local_topic",
    "metadata_request_timeout",
    "min_metadata_refresh_interval",
    "name",
    "resource_opts",
    "socket_opts",
    "ssl",
    "type"
  ],
  "bridge_azure_event_hub.producer_kafka_opts": [
    "buffer",
    "kafka_ext_headers",
    "kafka_header_value_encode_mode",
    "kafka_headers",
    "max_batch_bytes",
    "max_inflight",
    "message",
    "partition_count_refresh_interval",
    "partition_strategy",
    "query_mode",
    "required_acks",
    "sync_query_timeout",
    "topic"
  ],
  "bridge_azure_event_hub.ssl_client_opts": [
    "cacertfile",
    "cacerts",
    "certfile",
    "ciphers",
    "depth",
    "enable",
    "hibernate_after",
    "keyfile",
    "log_level",
    "password",
    "reuse_sessions",
    "secure_renegotiate",
    "server_name_indication",
    "verify",
    "versions"
  ],
  "bridge_cassa.post": [
    "auto_reconnect",
    "cql",
    "enable",
    "keyspace",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "servers",
    "ssl",
    "type",
    "username"
  ],
  "bridge_clickhouse.creation_opts": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_clickhouse.post": [
    "auto_reconnect",
    "batch_value_separator",
    "connect_timeout",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "sql",
    "type",
    "url",
    "username"
  ],
  "bridge_dynamo.creation_opts": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_dynamo.post": [
    "auto_reconnect",
    "aws_access_key_id",
    "aws_secret_access_key",
    "enable",
    "local_topic",
    "name",
    "pool_size",
    "resource_opts",
    "table",
    "template",
    "type",
    "url"
  ],
  "bridge_gcp_pubsub.consumer": [
    "pull_max_messages",
    "topic_mapping"
  ],
  "bridge_gcp_pubsub.consumer_resource_opts": [
    "auto_restart_interval",
    "health_check_interval",
    "request_ttl",
    "worker_pool_size"
  ],
  "bridge_gcp_pubsub.consumer_topic_mapping": [
    "mqtt_topic",
    "payload_template",
    "pubsub_topic",
    "qos"
  ],
  "bridge_gcp_pubsub.key_value_pair": [
    "key",
    "value"
  ],
  "bridge_gcp_pubsub.post_consumer": [
    "connect_timeout",
    "consumer",
    "enable",
    "max_retries",
    "name",
    "pipelining",
    "pool_size",
    "request_timeout",
    "resource_opts",
    "service_account_json",
    "type"
  ],
  "bridge_gcp_pubsub.post_producer": [
    "attributes_template",
    "connect_timeout",
    "enable",
    "local_topic",
    "max_retries",
    "name",
    "ordering_key_template",
    "payload_template",
    "pipelining",
    "pool_size",
    "pubsub_topic",
    "request_timeout",
    "resource_opts",
    "service_account_json",
    "type"
  ],
  "bridge_greptimedb.post_grpc_v1": [
    "dbname",
    "enable",
    "local_topic",
    "name",
    "password",
    "precision",
    "resource_opts",
    "server",
    "ssl",
    "type",
    "username",
    "write_syntax"
  ],
  "bridge_influxdb.post_api_v1": [
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "precision",
    "resource_opts",
    "server",
    "ssl",
    "type",
    "username",
    "write_syntax"
  ],
  "bridge_influxdb.post_api_v2": [
    "bucket",
    "enable",
    "local_topic",
    "name",
    "org",
    "precision",
    "resource_opts",
    "server",
    "ssl",
    "token",
    "type",
    "write_syntax"
  ],
  "bridge_iotdb.auth_basic": [
    "password",
    "username"
  ],
  "bridge_iotdb.creation_opts": [
    "auto_restart_interval",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_iotdb.post": [
    "authentication",
    "base_url",
    "connect_timeout",
    "device_id",
    "enable",
    "enable_pipelining",
    "iotdb_version",
    "is_aligned",
    "max_retries",
    "name",
    "pool_size",
    "pool_type",
    "resource_opts",
    "retry_interval",
    "ssl",
    "type"
  ],
  "bridge_kafka.auth_gssapi_kerberos": [
    "kerberos_keytab_file",
    "kerberos_principal"
  ],
  "bridge_kafka.auth_username_password": [
    "mechanism",
    "password",
    "username"
  ],
  "bridge_kafka.consumer_kafka_opts": [
    "max_batch_bytes",
    "offset_commit_interval_seconds",
    "offset_reset_policy"
  ],
  "bridge_kafka.consumer_topic_mapping": [
    "kafka_topic",
    "mqtt_topic",
    "payload_template",
    "qos"
  ],
  "bridge_kafka.kafka_message": [
    "key",
    "timestamp",
    "value"
  ],
  "bridge_kafka.post_consumer": [
    "authentication",
    "bootstrap_hosts",
    "connect_timeout",
    "enable",
    "kafka",
    "key_encoding_mode",
    "metadata_request_timeout",
    "min_metadata_refresh_interval",
    "name",
    "socket_opts",
    "ssl",
    "topic_mapping",
    "type",
    "value_encoding_mode"
  ],
  "bridge_kafka.post_producer": [
    "authentication",
    "bootstrap_hosts",
    "connect_timeout",
    "enable",
    "kafka",
    "local_topic",
    "metadata_request_timeout",
    "min_metadata_refresh_interval",
    "name",
    "socket_opts",
    "ssl",
    "type"
  ],
  "bridge_kafka.producer_buffer": [
    "memory_overload_protection",
    "mode",
    "per_partition_limit",
    "segment_bytes"
  ],
  "bridge_kafka.producer_kafka_ext_headers": [
    "kafka_ext_header_key",
    "kafka_ext_header_value"
  ],
  "bridge_kafka.producer_kafka_opts": [
    "buffer",
    "compression",
    "kafka_ext_headers",
    "kafka_header_value_encode_mode",
    "kafka_headers",
    "max_batch_bytes",
    "max_inflight",
    "message",
    "partition_count_refresh_interval",
    "partition_strategy",
    "query_mode",
    "required_acks",
    "sync_query_timeout",
    "topic"
  ],
  "bridge_kafka.socket_opts": [
    "recbuf",
    "sndbuf",
    "tcp_keepalive"
  ],
  "bridge_kinesis.post_producer": [
    "aws_access_key_id",
    "aws_secret_access_key",
    "enable",
    "endpoint",
    "local_topic",
    "max_retries",
    "name",
    "partition_key",
    "payload_template",
    "pool_size",
    "resource_opts",
    "stream_name",
    "type"
  ],
  "bridge_matrix.post": [
    "auto_reconnect",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "ssl",
    "type",
    "username"
  ],
  "bridge_mongodb.creation_opts": [
    "auto_restart_interval",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_mongodb.post_rs": [
    "auth_source",
    "collection",
    "database",
    "enable",
    "mongo_type",
    "name",
    "password",
    "payload_template",
    "pool_size",
    "r_mode",
    "replica_set_name",
    "resource_opts",
    "servers",
    "srv_record",
    "ssl",
    "topology",
    "type",
    "use_legacy_protocol",
    "username",
    "w_mode"
  ],
  "bridge_mongodb.post_sharded": [
    "auth_source",
    "collection",
    "database",
    "enable",
    "mongo_type",
    "name",
    "password",
    "payload_template",
    "pool_size",
    "resource_opts",
    "servers",
    "srv_record",
    "ssl",
    "topology",
    "type",
    "use_legacy_protocol",
    "username",
    "w_mode"
  ],
  "bridge_mongodb.post_single": [
    "auth_source",
    "collection",
    "database",
    "enable",
    "mongo_type",
    "name",
    "password",
    "payload_template",
    "pool_size",
    "resource_opts",
    "server",
    "srv_record",
    "ssl",
    "topology",
    "type",
    "use_legacy_protocol",
    "username",
    "w_mode"
  ],
  "bridge_mqtt.creation_opts": [
    "auto_restart_interval",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_mqtt.post": [
    "bridge_mode",
    "clean_start",
    "clientid_prefix",
    "egress",
    "enable",
    "ingress",
    "keepalive",
    "max_inflight",
    "mode",
    "name",
    "password",
    "proto_ver",
    "reconnect_interval",
    "resource_opts",
    "retry_interval",
    "server",
    "ssl",
    "type",
    "username"
  ],
  "bridge_mysql.post": [
    "auto_reconnect",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "ssl",
    "type",
    "username"
  ],
  "bridge_opents.post": [
    "auto_reconnect",
    "details",
    "enable",
    "name",
    "pool_size",
    "resource_opts",
    "server",
    "summary",
    "type"
  ],
  "bridge_oracle.post": [
    "auto_reconnect",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "service_name",
    "sid",
    "sql",
    "type",
    "username"
  ],
  "bridge_pgsql.post": [
    "auto_reconnect",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "ssl",
    "type",
    "username"
  ],
  "bridge_pulsar.auth_basic": [
    "password",
    "username"
  ],
  "bridge_pulsar.auth_token": [
    "jwt"
  ],
  "bridge_pulsar.post_producer": [
    "authentication",
    "batch_size",
    "buffer",
    "compression",
    "connect_timeout",
    "enable",
    "local_topic",
    "max_batch_bytes",
    "message",
    "name",
    "pulsar_topic",
    "resource_opts",
    "retention_period",
    "send_buffer",
    "servers",
    "ssl",
    "strategy",
    "sync_timeout",
    "type"
  ],
  "bridge_pulsar.producer_buffer": [
    "memory_overload_protection",
    "mode",
    "per_partition_limit",
    "segment_bytes"
  ],
  "bridge_pulsar.producer_pulsar_message": [
    "key",
    "value"
  ],
  "bridge_pulsar.producer_resource_opts": [
    "health_check_interval",
    "start_after_created",
    "start_timeout"
  ],
  "bridge_rabbitmq.creation_opts": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_rabbitmq.post": [
    "delivery_mode",
    "enable",
    "exchange",
    "heartbeat",
    "local_topic",
    "name",
    "password",
    "payload_template",
    "pool_size",
    "port",
    "publish_confirmation_timeout",
    "resource_opts",
    "routing_key",
    "server",
    "ssl",
    "timeout",
    "type",
    "username",
    "virtual_host",
    "wait_for_publish_confirmations"
  ],
  "bridge_redis.creation_opts_redis_cluster": [
    "auto_restart_interval",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_redis.creation_opts_redis_sentinel": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_redis.creation_opts_redis_single": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_redis.post_cluster": [
    "auto_reconnect",
    "command_template",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "redis_type",
    "resource_opts",
    "servers",
    "ssl",
    "type"
  ],
  "bridge_redis.post_sentinel": [
    "auto_reconnect",
    "command_template",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "redis_type",
    "resource_opts",
    "sentinel",
    "servers",
    "ssl",
    "type"
  ],
  "bridge_redis.post_single": [
    "auto_reconnect",
    "command_template",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "redis_type",
    "resource_opts",
    "server",
    "ssl",
    "type"
  ],
  "bridge_rocketmq.post": [
    "access_key",
    "auto_reconnect",
    "enable",
    "local_topic",
    "name",
    "pool_size",
    "refresh_interval",
    "resource_opts",
    "secret_key",
    "security_token",
    "send_buffer",
    "servers",
    "sync_timeout",
    "template",
    "topic",
    "type"
  ],
  "bridge_sqlserver.creation_opts": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_sqlserver.post": [
    "auto_reconnect",
    "database",
    "driver",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "type",
    "username"
  ],
  "bridge_tdengine.post": [
    "auto_reconnect",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "type",
    "username"
  ],
  "bridge_timescale.post": [
    "auto_reconnect",
    "database",
    "enable",
    "local_topic",
    "name",
    "password",
    "pool_size",
    "resource_opts",
    "server",
    "sql",
    "ssl",
    "type",
    "username"
  ],
  "bridge_webhook.creation_opts": [
    "auto_restart_interval",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ],
  "bridge_webhook.post": [
    "body",
    "connect_timeout",
    "direction",
    "enable",
    "enable_pipelining",
    "headers",
    "local_topic",
    "max_retries",
    "method",
    "name",
    "pool_size",
    "pool_type",
    "request",
    "request_timeout",
    "resource_opts",
    "retry_interval",
    "ssl",
    "type",
    "url"
  ],
  "broker.ssl_client_opts": [
    "cacertfile",
    "cacerts",
    "certfile",
    "ciphers",
    "depth",
    "enable",
    "hibernate_after",
    "keyfile",
    "log_level",
    "password",
    "reuse_sessions",
    "secure_renegotiate",
    "server_name_indication",
    "verify",
    "versions"
  ],
  "connector-http.request": [
    "body",
    "headers",
    "max_retries",
    "method",
    "path",
    "request_timeout"
  ],
  "connector-mqtt.egress": [
    "local",
    "pool_size",
    "remote"
  ],
  "connector-mqtt.egress_local": [
    "topic"
  ],
  "connector-mqtt.egress_remote": [
    "payload",
    "qos",
    "retain",
    "topic"
  ],
  "connector-mqtt.ingress": [
    "local",
    "pool_size",
    "remote"
  ],
  "connector-mqtt.ingress_local": [
    "payload",
    "qos",
    "retain",
    "topic"
  ],
  "connector-mqtt.ingress_remote": [
    "qos",
    "topic"
  ],
  "emqx_mongodb.topology": [
    "connect_timeout_ms",
    "heartbeat_frequency_ms",
    "local_threshold_ms",
    "max_overflow",
    "min_heartbeat_frequency_ms",
    "overflow_check_period",
    "overflow_ttl",
    "server_selection_timeout_ms",
    "socket_timeout_ms",
    "wait_queue_timeout_ms"
  ],
  "resource_schema.creation_opts": [
    "auto_restart_interval",
    "batch_size",
    "batch_time",
    "enable_queue",
    "health_check_interval",
    "inflight_window",
    "max_buffer_bytes",
    "query_mode",
    "request_ttl",
    "start_after_created",
    "start_timeout",
    "worker_pool_size"
  ]
}